Exception in thread "main" java.lang.RuntimeException: org.apache.calcite.plan.RelOptPlanner$CannotPlanException: There are not enough rules to produce a node with desired properties: convention=ENUMERABLE, sort=[0, 1].
Missing conversions are LogicalAggregate[convention: NONE -> ENUMERABLE, sort: [] -> [0]], LogicalAggregate[convention: NONE -> ENUMERABLE], LogicalProject[convention: NONE -> ENUMERABLE, sort: [] -> [94]]
There are 3 empty subsets:
Empty subset 0: rel#386:RelSubset#17.ENUMERABLE.[], the relevant part of the original plan is as follows
308:LogicalAggregate(group=[{0}], EXPR$0=[AVG($1)])
  306:LogicalProject(subset=[rel#307:RelSubset#16.NONE.[]], I_CATEGORY=[$12], I_CURRENT_PRICE=[$5])
    45:LogicalTableScan(subset=[rel#289:RelSubset#7.NONE.[]], table=[[TPCDS_5, ITEM]])

Empty subset 1: rel#389:RelSubset#15.ENUMERABLE.[94], the relevant part of the original plan is as follows
304:LogicalProject(CA_ADDRESS_SK=[$0], CA_ADDRESS_ID=[$1], CA_STREET_NUMBER=[$2], CA_STREET_NAME=[$3], CA_STREET_TYPE=[$4], CA_SUITE_NUMBER=[$5], CA_CITY=[$6], CA_COUNTY=[$7], CA_STATE=[$8], CA_ZIP=[$9], CA_COUNTRY=[$10], CA_GMT_OFFSET=[$11], CA_LOCATION_TYPE=[$12], C_CUSTOMER_SK=[$13], C_CUSTOMER_ID=[$14], C_CURRENT_CDEMO_SK=[$15], C_CURRENT_HDEMO_SK=[$16], C_CURRENT_ADDR_SK=[$17], C_FIRST_SHIPTO_DATE_SK=[$18], C_FIRST_SALES_DATE_SK=[$19], C_SALUTATION=[$20], C_FIRST_NAME=[$21], C_LAST_NAME=[$22], C_PREFERRED_CUST_FLAG=[$23], C_BIRTH_DAY=[$24], C_BIRTH_MONTH=[$25], C_BIRTH_YEAR=[$26], C_BIRTH_COUNTRY=[$27], C_LOGIN=[$28], C_EMAIL_ADDRESS=[$29], C_LAST_REVIEW_DATE_SK=[$30], SS_SOLD_DATE_SK=[$31], SS_SOLD_TIME_SK=[$32], SS_ITEM_SK=[$33], SS_CUSTOMER_SK=[$34], SS_CDEMO_SK=[$35], SS_HDEMO_SK=[$36], SS_ADDR_SK=[$37], SS_STORE_SK=[$38], SS_PROMO_SK=[$39], SS_TICKET_NUMBER=[$40], SS_QUANTITY=[$41], SS_WHOLESALE_COST=[$42], SS_LIST_PRICE=[$43], SS_SALES_PRICE=[$44], SS_EXT_DISCOUNT_AMT=[$45], SS_EXT_SALES_PRICE=[$46], SS_EXT_WHOLESALE_COST=[$47], SS_EXT_LIST_PRICE=[$48], SS_EXT_TAX=[$49], SS_COUPON_AMT=[$50], SS_NET_PAID=[$51], SS_NET_PAID_INC_TAX=[$52], SS_NET_PROFIT=[$53], D_DATE_SK=[$54], D_DATE_ID=[$55], D_DATE=[$56], D_MONTH_SEQ=[$57], D_WEEK_SEQ=[$58], D_QUARTER_SEQ=[$59], D_YEAR=[$60], D_DOW=[$61], D_MOY=[$62], D_DOM=[$63], D_QOY=[$64], D_FY_YEAR=[$65], D_FY_QUARTER_SEQ=[$66], D_FY_WEEK_SEQ=[$67], D_DAY_NAME=[$68], D_QUARTER_NAME=[$69], D_HOLIDAY=[$70], D_WEEKEND=[$71], D_FOLLOWING_HOLIDAY=[$72], D_FIRST_DOM=[$73], D_LAST_DOM=[$74], D_SAME_DAY_LY=[$75], D_SAME_DAY_LQ=[$76], D_CURRENT_DAY=[$77], D_CURRENT_WEEK=[$78], D_CURRENT_MONTH=[$79], D_CURRENT_QUARTER=[$80], D_CURRENT_YEAR=[$81], I_ITEM_SK=[$82], I_ITEM_ID=[$83], I_REC_START_DATE=[$84], I_REC_END_DATE=[$85], I_ITEM_DESC=[$86], I_CURRENT_PRICE=[$87], I_WHOLESALE_COST=[$88], I_BRAND_ID=[$89], I_BRAND=[$90], I_CLASS_ID=[$91], I_CLASS=[$92], I_CATEGORY_ID=[$93], I_CATEGORY=[$94], I_MANUFACT_ID=[$95], I_MANUFACT=[$96], I_SIZE=[$97], I_FORMULATION=[$98], I_COLOR=[$99], I_UNITS=[$100], I_CONTAINER=[$101], I_MANAGER_ID=[$102], I_PRODUCT_NAME=[$103], $f0=[CAST($104):INTEGER])
  302:LogicalJoin(subset=[rel#303:RelSubset#14.NONE.[]], condition=[=($57, $104)], joinType=[inner])
    290:LogicalJoin(subset=[rel#291:RelSubset#8.NONE.[]], condition=[=($33, $82)], joinType=[inner])
      287:LogicalJoin(subset=[rel#288:RelSubset#6.NONE.[]], condition=[=($31, $54)], joinType=[inner])
        284:LogicalJoin(subset=[rel#285:RelSubset#4.NONE.[]], condition=[=($13, $34)], joinType=[inner])
          281:LogicalJoin(subset=[rel#282:RelSubset#2.NONE.[]], condition=[=($0, $17)], joinType=[inner])
            38:LogicalTableScan(subset=[rel#279:RelSubset#0.NONE.[]], table=[[TPCDS_5, CUSTOMER_ADDRESS]])
            39:LogicalTableScan(subset=[rel#280:RelSubset#1.NONE.[]], table=[[TPCDS_5, CUSTOMER]])
          41:LogicalTableScan(subset=[rel#283:RelSubset#3.NONE.[]], table=[[TPCDS_5, STORE_SALES]])
        43:LogicalTableScan(subset=[rel#286:RelSubset#5.NONE.[]], table=[[TPCDS_5, DATE_DIM]])
      45:LogicalTableScan(subset=[rel#289:RelSubset#7.NONE.[]], table=[[TPCDS_5, ITEM]])
    300:LogicalAggregate(subset=[rel#301:RelSubset#13.NONE.[]], group=[{}], agg#0=[SINGLE_VALUE($0)])
      298:LogicalProject(subset=[rel#299:RelSubset#12.NONE.[]], D_MONTH_SEQ=[$0])
        296:LogicalAggregate(subset=[rel#297:RelSubset#11.NONE.[]], group=[{0}])
          294:LogicalProject(subset=[rel#295:RelSubset#10.NONE.[]], D_MONTH_SEQ=[$3])
            292:LogicalFilter(subset=[rel#293:RelSubset#9.NONE.[]], condition=[AND(=($6, 2002), =($8, 3))])
              43:LogicalTableScan(subset=[rel#286:RelSubset#5.NONE.[]], table=[[TPCDS_5, DATE_DIM]])

Empty subset 2: rel#391:RelSubset#17.ENUMERABLE.[0], the relevant part of the original plan is as follows
308:LogicalAggregate(group=[{0}], EXPR$0=[AVG($1)])
  306:LogicalProject(subset=[rel#307:RelSubset#16.NONE.[]], I_CATEGORY=[$12], I_CURRENT_PRICE=[$5])
    45:LogicalTableScan(subset=[rel#289:RelSubset#7.NONE.[]], table=[[TPCDS_5, ITEM]])

Root: rel#404:RelSubset#23.ENUMERABLE.[0, 1]
Original rel:
LogicalSort(subset=[rel#324:RelSubset#24.ENUMERABLE.[0, 1]], sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC]): rowcount = 1.5953906817909763E23, cumulative cost = {1.5953906817909763E23 rows, 1.7047252234010007E26 cpu, 0.0 io}, id = 322
  LogicalProject(subset=[rel#321:RelSubset#23.NONE.[]], CNT=[$1], CA_STATE=[$0]): rowcount = 1.5953906817909763E23, cumulative cost = {1.5953906817909763E23 rows, 3.1907813635819525E23 cpu, 0.0 io}, id = 320
    LogicalFilter(subset=[rel#319:RelSubset#22.NONE.[]], condition=[>=($1, 10)]): rowcount = 1.5953906817909763E23, cumulative cost = {1.5953906817909763E23 rows, 3.1907813635819525E23 cpu, 0.0 io}, id = 318
      LogicalAggregate(subset=[rel#317:RelSubset#21.NONE.[]], group=[{0}], CNT=[COUNT()]): rowcount = 3.1907813635819525E23, cumulative cost = {3.5896290340296964E23 rows, 0.0 cpu, 0.0 io}, id = 316
        LogicalProject(subset=[rel#315:RelSubset#20.NONE.[]], CA_STATE=[$8]): rowcount = 3.190781363581952E24, cumulative cost = {3.190781363581952E24 rows, 3.190781363581952E24 cpu, 0.0 io}, id = 314
          LogicalProject(subset=[rel#313:RelSubset#19.NONE.[]], CA_ADDRESS_SK=[$0], CA_ADDRESS_ID=[$1], CA_STREET_NUMBER=[$2], CA_STREET_NAME=[$3], CA_STREET_TYPE=[$4], CA_SUITE_NUMBER=[$5], CA_CITY=[$6], CA_COUNTY=[$7], CA_STATE=[$8], CA_ZIP=[$9], CA_COUNTRY=[$10], CA_GMT_OFFSET=[$11], CA_LOCATION_TYPE=[$12], C_CUSTOMER_SK=[$13], C_CUSTOMER_ID=[$14], C_CURRENT_CDEMO_SK=[$15], C_CURRENT_HDEMO_SK=[$16], C_CURRENT_ADDR_SK=[$17], C_FIRST_SHIPTO_DATE_SK=[$18], C_FIRST_SALES_DATE_SK=[$19], C_SALUTATION=[$20], C_FIRST_NAME=[$21], C_LAST_NAME=[$22], C_PREFERRED_CUST_FLAG=[$23], C_BIRTH_DAY=[$24], C_BIRTH_MONTH=[$25], C_BIRTH_YEAR=[$26], C_BIRTH_COUNTRY=[$27], C_LOGIN=[$28], C_EMAIL_ADDRESS=[$29], C_LAST_REVIEW_DATE_SK=[$30], SS_SOLD_DATE_SK=[$31], SS_SOLD_TIME_SK=[$32], SS_ITEM_SK=[$33], SS_CUSTOMER_SK=[$34], SS_CDEMO_SK=[$35], SS_HDEMO_SK=[$36], SS_ADDR_SK=[$37], SS_STORE_SK=[$38], SS_PROMO_SK=[$39], SS_TICKET_NUMBER=[$40], SS_QUANTITY=[$41], SS_WHOLESALE_COST=[$42], SS_LIST_PRICE=[$43], SS_SALES_PRICE=[$44], SS_EXT_DISCOUNT_AMT=[$45], SS_EXT_SALES_PRICE=[$46], SS_EXT_WHOLESALE_COST=[$47], SS_EXT_LIST_PRICE=[$48], SS_EXT_TAX=[$49], SS_COUPON_AMT=[$50], SS_NET_PAID=[$51], SS_NET_PAID_INC_TAX=[$52], SS_NET_PROFIT=[$53], D_DATE_SK=[$54], D_DATE_ID=[$55], D_DATE=[$56], D_MONTH_SEQ=[$57], D_WEEK_SEQ=[$58], D_QUARTER_SEQ=[$59], D_YEAR=[$60], D_DOW=[$61], D_MOY=[$62], D_DOM=[$63], D_QOY=[$64], D_FY_YEAR=[$65], D_FY_QUARTER_SEQ=[$66], D_FY_WEEK_SEQ=[$67], D_DAY_NAME=[$68], D_QUARTER_NAME=[$69], D_HOLIDAY=[$70], D_WEEKEND=[$71], D_FOLLOWING_HOLIDAY=[$72], D_FIRST_DOM=[$73], D_LAST_DOM=[$74], D_SAME_DAY_LY=[$75], D_SAME_DAY_LQ=[$76], D_CURRENT_DAY=[$77], D_CURRENT_WEEK=[$78], D_CURRENT_MONTH=[$79], D_CURRENT_QUARTER=[$80], D_CURRENT_YEAR=[$81], I_ITEM_SK=[$82], I_ITEM_ID=[$83], I_REC_START_DATE=[$84], I_REC_END_DATE=[$85], I_ITEM_DESC=[$86], I_CURRENT_PRICE=[$87], I_WHOLESALE_COST=[$88], I_BRAND_ID=[$89], I_BRAND=[$90], I_CLASS_ID=[$91], I_CLASS=[$92], I_CATEGORY_ID=[$93], I_CATEGORY=[$94], I_MANUFACT_ID=[$95], I_MANUFACT=[$96], I_SIZE=[$97], I_FORMULATION=[$98], I_COLOR=[$99], I_UNITS=[$100], I_CONTAINER=[$101], I_MANAGER_ID=[$102], I_PRODUCT_NAME=[$103], $f0=[$104], I_CATEGORY0=[CAST($105):CHAR(50)], EXPR$0=[CAST($106):DECIMAL(7, 2)]): rowcount = 3.190781363581952E24, cumulative cost = {3.190781363581952E24 rows, 3.4141360590326886E26 cpu, 0.0 io}, id = 312
            LogicalJoin(subset=[rel#311:RelSubset#18.NONE.[]], condition=[AND(=($94, $105), >($87, *(1.2:DECIMAL(2, 1), $106)))], joinType=[inner]): rowcount = 3.190781363581952E24, cumulative cost = {3.190781363581952E24 rows, 0.0 cpu, 0.0 io}, id = 310
              LogicalProject(subset=[rel#305:RelSubset#15.NONE.[]], CA_ADDRESS_SK=[$0], CA_ADDRESS_ID=[$1], CA_STREET_NUMBER=[$2], CA_STREET_NAME=[$3], CA_STREET_TYPE=[$4], CA_SUITE_NUMBER=[$5], CA_CITY=[$6], CA_COUNTY=[$7], CA_STATE=[$8], CA_ZIP=[$9], CA_COUNTRY=[$10], CA_GMT_OFFSET=[$11], CA_LOCATION_TYPE=[$12], C_CUSTOMER_SK=[$13], C_CUSTOMER_ID=[$14], C_CURRENT_CDEMO_SK=[$15], C_CURRENT_HDEMO_SK=[$16], C_CURRENT_ADDR_SK=[$17], C_FIRST_SHIPTO_DATE_SK=[$18], C_FIRST_SALES_DATE_SK=[$19], C_SALUTATION=[$20], C_FIRST_NAME=[$21], C_LAST_NAME=[$22], C_PREFERRED_CUST_FLAG=[$23], C_BIRTH_DAY=[$24], C_BIRTH_MONTH=[$25], C_BIRTH_YEAR=[$26], C_BIRTH_COUNTRY=[$27], C_LOGIN=[$28], C_EMAIL_ADDRESS=[$29], C_LAST_REVIEW_DATE_SK=[$30], SS_SOLD_DATE_SK=[$31], SS_SOLD_TIME_SK=[$32], SS_ITEM_SK=[$33], SS_CUSTOMER_SK=[$34], SS_CDEMO_SK=[$35], SS_HDEMO_SK=[$36], SS_ADDR_SK=[$37], SS_STORE_SK=[$38], SS_PROMO_SK=[$39], SS_TICKET_NUMBER=[$40], SS_QUANTITY=[$41], SS_WHOLESALE_COST=[$42], SS_LIST_PRICE=[$43], SS_SALES_PRICE=[$44], SS_EXT_DISCOUNT_AMT=[$45], SS_EXT_SALES_PRICE=[$46], SS_EXT_WHOLESALE_COST=[$47], SS_EXT_LIST_PRICE=[$48], SS_EXT_TAX=[$49], SS_COUPON_AMT=[$50], SS_NET_PAID=[$51], SS_NET_PAID_INC_TAX=[$52], SS_NET_PROFIT=[$53], D_DATE_SK=[$54], D_DATE_ID=[$55], D_DATE=[$56], D_MONTH_SEQ=[$57], D_WEEK_SEQ=[$58], D_QUARTER_SEQ=[$59], D_YEAR=[$60], D_DOW=[$61], D_MOY=[$62], D_DOM=[$63], D_QOY=[$64], D_FY_YEAR=[$65], D_FY_QUARTER_SEQ=[$66], D_FY_WEEK_SEQ=[$67], D_DAY_NAME=[$68], D_QUARTER_NAME=[$69], D_HOLIDAY=[$70], D_WEEKEND=[$71], D_FOLLOWING_HOLIDAY=[$72], D_FIRST_DOM=[$73], D_LAST_DOM=[$74], D_SAME_DAY_LY=[$75], D_SAME_DAY_LQ=[$76], D_CURRENT_DAY=[$77], D_CURRENT_WEEK=[$78], D_CURRENT_MONTH=[$79], D_CURRENT_QUARTER=[$80], D_CURRENT_YEAR=[$81], I_ITEM_SK=[$82], I_ITEM_ID=[$83], I_REC_START_DATE=[$84], I_REC_END_DATE=[$85], I_ITEM_DESC=[$86], I_CURRENT_PRICE=[$87], I_WHOLESALE_COST=[$88], I_BRAND_ID=[$89], I_BRAND=[$90], I_CLASS_ID=[$91], I_CLASS=[$92], I_CATEGORY_ID=[$93], I_CATEGORY=[$94], I_MANUFACT_ID=[$95], I_MANUFACT=[$96], I_SIZE=[$97], I_FORMULATION=[$98], I_COLOR=[$99], I_UNITS=[$100], I_CONTAINER=[$101], I_MANAGER_ID=[$102], I_PRODUCT_NAME=[$103], $f0=[CAST($104):INTEGER]): rowcount = 2.363541750801446E22, cumulative cost = {2.363541750801446E22 rows, 2.4817188383415185E24 cpu, 0.0 io}, id = 304
                LogicalJoin(subset=[rel#303:RelSubset#14.NONE.[]], condition=[=($57, $104)], joinType=[inner]): rowcount = 2.363541750801446E22, cumulative cost = {2.363541750801446E22 rows, 0.0 cpu, 0.0 io}, id = 302
                  LogicalJoin(subset=[rel#291:RelSubset#8.NONE.[]], condition=[=($33, $82)], joinType=[inner]): rowcount = 9.586834411205249E21, cumulative cost = {9.586834411205249E21 rows, 0.0 cpu, 0.0 io}, id = 290
                    LogicalJoin(subset=[rel#288:RelSubset#6.NONE.[]], condition=[=($31, $54)], joinType=[inner]): rowcount = 3.5506794115574999E18, cumulative cost = {3.5506794115574999E18 rows, 0.0 cpu, 0.0 io}, id = 287
                      LogicalJoin(subset=[rel#285:RelSubset#4.NONE.[]], condition=[=($13, $34)], joinType=[inner]): rowcount = 3.2404545E14, cumulative cost = {3.2404545E14 rows, 0.0 cpu, 0.0 io}, id = 284
                        LogicalJoin(subset=[rel#282:RelSubset#2.NONE.[]], condition=[=($0, $17)], joinType=[inner]): rowcount = 7.5E8, cumulative cost = {7.5E8 rows, 0.0 cpu, 0.0 io}, id = 281
                          LogicalTableScan(subset=[rel#279:RelSubset#0.NONE.[]], table=[[TPCDS_5, CUSTOMER_ADDRESS]]): rowcount = 50000.0, cumulative cost = {50000.0 rows, 50001.0 cpu, 0.0 io}, id = 38
                          LogicalTableScan(subset=[rel#280:RelSubset#1.NONE.[]], table=[[TPCDS_5, CUSTOMER]]): rowcount = 100000.0, cumulative cost = {100000.0 rows, 100001.0 cpu, 0.0 io}, id = 39
                        LogicalTableScan(subset=[rel#283:RelSubset#3.NONE.[]], table=[[TPCDS_5, STORE_SALES]]): rowcount = 2880404.0, cumulative cost = {2880404.0 rows, 2880405.0 cpu, 0.0 io}, id = 41
                      LogicalTableScan(subset=[rel#286:RelSubset#5.NONE.[]], table=[[TPCDS_5, DATE_DIM]]): rowcount = 73049.0, cumulative cost = {73049.0 rows, 73050.0 cpu, 0.0 io}, id = 43
                    LogicalTableScan(subset=[rel#289:RelSubset#7.NONE.[]], table=[[TPCDS_5, ITEM]]): rowcount = 18000.0, cumulative cost = {18000.0 rows, 18001.0 cpu, 0.0 io}, id = 45
                  LogicalAggregate(subset=[rel#301:RelSubset#13.NONE.[]], group=[{}], agg#0=[SINGLE_VALUE($0)]): rowcount = 16.436025, cumulative cost = {18.490528125 rows, 0.0 cpu, 0.0 io}, id = 300
                    LogicalProject(subset=[rel#299:RelSubset#12.NONE.[]], D_MONTH_SEQ=[$0]): rowcount = 164.36025, cumulative cost = {164.36025 rows, 164.36025 cpu, 0.0 io}, id = 298
                      LogicalAggregate(subset=[rel#297:RelSubset#11.NONE.[]], group=[{0}]): rowcount = 164.36025, cumulative cost = {164.36025 rows, 0.0 cpu, 0.0 io}, id = 296
                        LogicalProject(subset=[rel#295:RelSubset#10.NONE.[]], D_MONTH_SEQ=[$3]): rowcount = 1643.6025, cumulative cost = {1643.6025 rows, 1643.6025 cpu, 0.0 io}, id = 294
                          LogicalFilter(subset=[rel#293:RelSubset#9.NONE.[]], condition=[AND(=($6, 2002), =($8, 3))]): rowcount = 1643.6025, cumulative cost = {1643.6025 rows, 73049.0 cpu, 0.0 io}, id = 292
                            LogicalTableScan(subset=[rel#286:RelSubset#5.NONE.[]], table=[[TPCDS_5, DATE_DIM]]): rowcount = 73049.0, cumulative cost = {73049.0 rows, 73050.0 cpu, 0.0 io}, id = 43
              LogicalAggregate(subset=[rel#309:RelSubset#17.NONE.[]], group=[{0}], EXPR$0=[AVG($1)]): rowcount = 1800.0, cumulative cost = {2025.0 rows, 0.0 cpu, 0.0 io}, id = 308
                LogicalProject(subset=[rel#307:RelSubset#16.NONE.[]], I_CATEGORY=[$12], I_CURRENT_PRICE=[$5]): rowcount = 18000.0, cumulative cost = {18000.0 rows, 36000.0 cpu, 0.0 io}, id = 306
                  LogicalTableScan(subset=[rel#289:RelSubset#7.NONE.[]], table=[[TPCDS_5, ITEM]]): rowcount = 18000.0, cumulative cost = {18000.0 rows, 18001.0 cpu, 0.0 io}, id = 45

Sets:
Set#0, type: RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE)
	rel#279:RelSubset#0.NONE.[], best=null
		rel#38:LogicalTableScan.NONE.[](table=[TPCDS_5, CUSTOMER_ADDRESS]), rowcount=50000.0, cumulative cost={inf}
	rel#327:RelSubset#0.ENUMERABLE.[], best=rel#326
		rel#326:EnumerableTableScan.ENUMERABLE.[](table=[TPCDS_5, CUSTOMER_ADDRESS]), rowcount=50000.0, cumulative cost={50000.0 rows, 50001.0 cpu, 0.0 io}
		rel#333:AbstractConverter.ENUMERABLE.[0](input=RelSubset#327,convention=ENUMERABLE,sort=[0]), rowcount=50000.0, cumulative cost={inf}
	rel#332:RelSubset#0.ENUMERABLE.[0], best=null
		rel#333:AbstractConverter.ENUMERABLE.[0](input=RelSubset#327,convention=ENUMERABLE,sort=[0]), rowcount=50000.0, cumulative cost={inf}
Set#1, type: RecordType(BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK)
	rel#280:RelSubset#1.NONE.[], best=null
		rel#39:LogicalTableScan.NONE.[](table=[TPCDS_5, CUSTOMER]), rowcount=100000.0, cumulative cost={inf}
	rel#329:RelSubset#1.ENUMERABLE.[], best=rel#328
		rel#328:EnumerableTableScan.ENUMERABLE.[](table=[TPCDS_5, CUSTOMER]), rowcount=100000.0, cumulative cost={100000.0 rows, 100001.0 cpu, 0.0 io}
		rel#335:AbstractConverter.ENUMERABLE.[4](input=RelSubset#329,convention=ENUMERABLE,sort=[4]), rowcount=100000.0, cumulative cost={inf}
	rel#334:RelSubset#1.ENUMERABLE.[4], best=null
		rel#335:AbstractConverter.ENUMERABLE.[4](input=RelSubset#329,convention=ENUMERABLE,sort=[4]), rowcount=100000.0, cumulative cost={inf}
Set#2, type: RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK)
	rel#282:RelSubset#2.NONE.[], best=null
		rel#281:LogicalJoin.NONE.[](left=RelSubset#279,right=RelSubset#280,condition==($0, $17),joinType=inner), rowcount=7.5E8, cumulative cost={inf}
	rel#331:RelSubset#2.ENUMERABLE.[], best=rel#330
		rel#330:EnumerableHashJoin.ENUMERABLE.[](left=RelSubset#327,right=RelSubset#329,condition==($0, $17),joinType=inner), rowcount=7.5E8, cumulative cost={7.507909899142206E8 rows, 150002.0 cpu, 0.0 io}
		rel#336:EnumerableMergeJoin.ENUMERABLE.[[0], [17]](left=RelSubset#332,right=RelSubset#334,condition==($0, $17),joinType=inner), rowcount=7.5E8, cumulative cost={inf}
		rel#342:AbstractConverter.ENUMERABLE.[13](input=RelSubset#331,convention=ENUMERABLE,sort=[13]), rowcount=7.5E8, cumulative cost={inf}
	rel#341:RelSubset#2.ENUMERABLE.[13], best=null
		rel#342:AbstractConverter.ENUMERABLE.[13](input=RelSubset#331,convention=ENUMERABLE,sort=[13]), rowcount=7.5E8, cumulative cost={inf}
Set#3, type: RecordType(BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT)
	rel#283:RelSubset#3.NONE.[], best=null
		rel#41:LogicalTableScan.NONE.[](table=[TPCDS_5, STORE_SALES]), rowcount=2880404.0, cumulative cost={inf}
	rel#338:RelSubset#3.ENUMERABLE.[], best=rel#337
		rel#337:EnumerableTableScan.ENUMERABLE.[](table=[TPCDS_5, STORE_SALES]), rowcount=2880404.0, cumulative cost={2880404.0 rows, 2880405.0 cpu, 0.0 io}
		rel#344:AbstractConverter.ENUMERABLE.[3](input=RelSubset#338,convention=ENUMERABLE,sort=[3]), rowcount=2880404.0, cumulative cost={inf}
	rel#343:RelSubset#3.ENUMERABLE.[3], best=null
		rel#344:AbstractConverter.ENUMERABLE.[3](input=RelSubset#338,convention=ENUMERABLE,sort=[3]), rowcount=2880404.0, cumulative cost={inf}
Set#4, type: RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT)
	rel#285:RelSubset#4.NONE.[], best=null
		rel#284:LogicalJoin.NONE.[](left=RelSubset#282,right=RelSubset#283,condition==($13, $34),joinType=inner), rowcount=3.2404545E14, cumulative cost={inf}
	rel#340:RelSubset#4.ENUMERABLE.[], best=rel#339
		rel#339:EnumerableHashJoin.ENUMERABLE.[](left=RelSubset#331,right=RelSubset#338,condition==($13, $34),joinType=inner), rowcount=3.2404545E14, cumulative cost={3.240615332396213E14 rows, 3030407.0 cpu, 0.0 io}
		rel#345:EnumerableMergeJoin.ENUMERABLE.[[13], [34]](left=RelSubset#341,right=RelSubset#343,condition==($13, $34),joinType=inner), rowcount=3.2404545E14, cumulative cost={inf}
		rel#351:AbstractConverter.ENUMERABLE.[31](input=RelSubset#340,convention=ENUMERABLE,sort=[31]), rowcount=3.2404545E14, cumulative cost={inf}
	rel#350:RelSubset#4.ENUMERABLE.[31], best=null
		rel#351:AbstractConverter.ENUMERABLE.[31](input=RelSubset#340,convention=ENUMERABLE,sort=[31]), rowcount=3.2404545E14, cumulative cost={inf}
Set#5, type: RecordType(BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR)
	rel#286:RelSubset#5.NONE.[], best=null
		rel#43:LogicalTableScan.NONE.[](table=[TPCDS_5, DATE_DIM]), rowcount=73049.0, cumulative cost={inf}
	rel#347:RelSubset#5.ENUMERABLE.[], best=rel#346
		rel#346:EnumerableTableScan.ENUMERABLE.[](table=[TPCDS_5, DATE_DIM]), rowcount=73049.0, cumulative cost={73049.0 rows, 73050.0 cpu, 0.0 io}
		rel#353:AbstractConverter.ENUMERABLE.[0](input=RelSubset#347,convention=ENUMERABLE,sort=[0]), rowcount=73049.0, cumulative cost={inf}
	rel#352:RelSubset#5.ENUMERABLE.[0], best=null
		rel#353:AbstractConverter.ENUMERABLE.[0](input=RelSubset#347,convention=ENUMERABLE,sort=[0]), rowcount=73049.0, cumulative cost={inf}
Set#6, type: RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR)
	rel#288:RelSubset#6.NONE.[], best=null
		rel#287:LogicalJoin.NONE.[](left=RelSubset#285,right=RelSubset#286,condition==($31, $54),joinType=inner), rowcount=3.5506794115574999E18, cumulative cost={inf}
	rel#349:RelSubset#6.ENUMERABLE.[], best=rel#348
		rel#348:EnumerableHashJoin.ENUMERABLE.[](left=RelSubset#340,right=RelSubset#347,condition==($31, $54),joinType=inner), rowcount=3.5506794115574999E18, cumulative cost={3.5618304488494541E18 rows, 3103457.0 cpu, 0.0 io}
		rel#354:EnumerableMergeJoin.ENUMERABLE.[[31], [54]](left=RelSubset#350,right=RelSubset#352,condition==($31, $54),joinType=inner), rowcount=3.5506794115574999E18, cumulative cost={inf}
		rel#360:AbstractConverter.ENUMERABLE.[33](input=RelSubset#349,convention=ENUMERABLE,sort=[33]), rowcount=3.5506794115574999E18, cumulative cost={inf}
	rel#359:RelSubset#6.ENUMERABLE.[33], best=null
		rel#360:AbstractConverter.ENUMERABLE.[33](input=RelSubset#349,convention=ENUMERABLE,sort=[33]), rowcount=3.5506794115574999E18, cumulative cost={inf}
Set#7, type: RecordType(BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME)
	rel#289:RelSubset#7.NONE.[], best=null
		rel#45:LogicalTableScan.NONE.[](table=[TPCDS_5, ITEM]), rowcount=18000.0, cumulative cost={inf}
	rel#356:RelSubset#7.ENUMERABLE.[], best=rel#355
		rel#355:EnumerableTableScan.ENUMERABLE.[](table=[TPCDS_5, ITEM]), rowcount=18000.0, cumulative cost={18000.0 rows, 18001.0 cpu, 0.0 io}
		rel#362:AbstractConverter.ENUMERABLE.[0](input=RelSubset#356,convention=ENUMERABLE,sort=[0]), rowcount=18000.0, cumulative cost={inf}
	rel#361:RelSubset#7.ENUMERABLE.[0], best=null
		rel#362:AbstractConverter.ENUMERABLE.[0](input=RelSubset#356,convention=ENUMERABLE,sort=[0]), rowcount=18000.0, cumulative cost={inf}
Set#8, type: RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR, BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME)
	rel#291:RelSubset#8.NONE.[], best=null
		rel#290:LogicalJoin.NONE.[](left=RelSubset#288,right=RelSubset#289,condition==($33, $82),joinType=inner), rowcount=9.586834411205249E21, cumulative cost={inf}
	rel#358:RelSubset#8.ENUMERABLE.[], best=rel#357
		rel#357:EnumerableHashJoin.ENUMERABLE.[](left=RelSubset#349,right=RelSubset#356,condition==($33, $82),joinType=inner), rowcount=9.586834411205249E21, cumulative cost={9.742058792596848E21 rows, 3121458.0 cpu, 0.0 io}
		rel#363:EnumerableMergeJoin.ENUMERABLE.[[33], [82]](left=RelSubset#359,right=RelSubset#361,condition==($33, $82),joinType=inner), rowcount=9.586834411205249E21, cumulative cost={inf}
		rel#377:AbstractConverter.ENUMERABLE.[57](input=RelSubset#358,convention=ENUMERABLE,sort=[57]), rowcount=9.586834411205249E21, cumulative cost={inf}
	rel#376:RelSubset#8.ENUMERABLE.[57], best=null
		rel#377:AbstractConverter.ENUMERABLE.[57](input=RelSubset#358,convention=ENUMERABLE,sort=[57]), rowcount=9.586834411205249E21, cumulative cost={inf}
Set#9, type: RecordType(BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR)
	rel#293:RelSubset#9.NONE.[], best=null
		rel#292:LogicalFilter.NONE.[](input=RelSubset#286,condition=AND(=($6, 2002), =($8, 3))), rowcount=1643.6025, cumulative cost={inf}
	rel#365:RelSubset#9.ENUMERABLE.[], best=rel#364
		rel#364:EnumerableFilter.ENUMERABLE.[](input=RelSubset#347,condition=AND(=($6, 2002), =($8, 3))), rowcount=1643.6025, cumulative cost={74692.6025 rows, 146099.0 cpu, 0.0 io}
Set#10, type: RecordType(INTEGER D_MONTH_SEQ)
	rel#295:RelSubset#10.NONE.[], best=null
		rel#294:LogicalProject.NONE.[](input=RelSubset#293,exprs=[$3]), rowcount=1643.6025, cumulative cost={inf}
	rel#367:RelSubset#10.ENUMERABLE.[], best=rel#366
		rel#366:EnumerableProject.ENUMERABLE.[](input=RelSubset#365,exprs=[$3]), rowcount=1643.6025, cumulative cost={76336.20499999999 rows, 147742.6025 cpu, 0.0 io}
Set#11, type: RecordType(INTEGER D_MONTH_SEQ)
	rel#297:RelSubset#11.NONE.[], best=null
		rel#296:LogicalAggregate.NONE.[](input=RelSubset#295,group={0}), rowcount=164.36025, cumulative cost={inf}
	rel#369:RelSubset#11.ENUMERABLE.[], best=rel#368
		rel#368:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#367,group={0}), rowcount=164.36025, cumulative cost={76500.56524999999 rows, 147742.6025 cpu, 0.0 io}
Set#12, type: RecordType(INTEGER D_MONTH_SEQ)
	rel#299:RelSubset#12.NONE.[], best=null
		rel#298:LogicalProject.NONE.[](input=RelSubset#297,inputs=0), rowcount=164.36025, cumulative cost={inf}
	rel#371:RelSubset#12.ENUMERABLE.[], best=rel#370
		rel#370:EnumerableProject.ENUMERABLE.[](input=RelSubset#369,inputs=0), rowcount=164.36025, cumulative cost={76664.92549999998 rows, 147906.96275 cpu, 0.0 io}
Set#13, type: RecordType(INTEGER $f0)
	rel#301:RelSubset#13.NONE.[], best=null
		rel#300:LogicalAggregate.NONE.[](input=RelSubset#299,group={},agg#0=SINGLE_VALUE($0)), rowcount=16.436025, cumulative cost={inf}
	rel#373:RelSubset#13.ENUMERABLE.[], best=rel#372
		rel#372:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#371,group={},agg#0=SINGLE_VALUE($0)), rowcount=1.0, cumulative cost={76666.05049999998 rows, 147906.96275 cpu, 0.0 io}
		rel#379:AbstractConverter.ENUMERABLE.[0](input=RelSubset#373,convention=ENUMERABLE,sort=[0]), rowcount=1.0, cumulative cost={inf}
	rel#378:RelSubset#13.ENUMERABLE.[0], best=null
		rel#379:AbstractConverter.ENUMERABLE.[0](input=RelSubset#373,convention=ENUMERABLE,sort=[0]), rowcount=1.0, cumulative cost={inf}
Set#14, type: RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR, BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME, INTEGER $f0)
	rel#303:RelSubset#14.NONE.[], best=null
		rel#302:LogicalJoin.NONE.[](left=RelSubset#291,right=RelSubset#301,condition==($57, $104),joinType=inner), rowcount=2.363541750801446E22, cumulative cost={inf}
	rel#375:RelSubset#14.ENUMERABLE.[], best=rel#374
		rel#374:EnumerableHashJoin.ENUMERABLE.[](left=RelSubset#358,right=RelSubset#373,condition==($57, $104),joinType=inner), rowcount=1.4380251616807873E21, cumulative cost={4.964146177889163E23 rows, 3269364.96275 cpu, 0.0 io}
		rel#380:EnumerableMergeJoin.ENUMERABLE.[[57], [104]](left=RelSubset#376,right=RelSubset#378,condition==($57, $104),joinType=inner), rowcount=2.363541750801446E22, cumulative cost={inf}
Set#15, type: RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR, BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME, INTEGER $f0)
	rel#305:RelSubset#15.NONE.[], best=null
		rel#304:LogicalProject.NONE.[](input=RelSubset#303,inputs=0..103,exprs=[CAST($104):INTEGER]), rowcount=2.363541750801446E22, cumulative cost={inf}
	rel#382:RelSubset#15.ENUMERABLE.[], best=rel#381
		rel#381:EnumerableProject.ENUMERABLE.[](input=RelSubset#375,inputs=0..103,exprs=[CAST($104):INTEGER]), rowcount=1.4380251616807873E21, cumulative cost={4.978526429505971E23 rows, 1.5099264197648267E23 cpu, 0.0 io}
		rel#390:AbstractConverter.ENUMERABLE.[94](input=RelSubset#382,convention=ENUMERABLE,sort=[94]), rowcount=1.4380251616807873E21, cumulative cost={inf}
	rel#389:RelSubset#15.ENUMERABLE.[94], best=null
		rel#390:AbstractConverter.ENUMERABLE.[94](input=RelSubset#382,convention=ENUMERABLE,sort=[94]), rowcount=1.4380251616807873E21, cumulative cost={inf}
Set#16, type: RecordType(CHAR(50) I_CATEGORY, DECIMAL(7, 2) I_CURRENT_PRICE)
	rel#307:RelSubset#16.NONE.[], best=null
		rel#306:LogicalProject.NONE.[](input=RelSubset#289,exprs=[$12, $5]), rowcount=18000.0, cumulative cost={inf}
	rel#384:RelSubset#16.ENUMERABLE.[], best=rel#383
		rel#383:EnumerableProject.ENUMERABLE.[](input=RelSubset#356,exprs=[$12, $5]), rowcount=18000.0, cumulative cost={36000.0 rows, 54001.0 cpu, 0.0 io}
Set#17, type: RecordType(CHAR(50) I_CATEGORY, DECIMAL(7, 2) EXPR$0)
	rel#309:RelSubset#17.NONE.[], best=null
		rel#308:LogicalAggregate.NONE.[](input=RelSubset#307,group={0},EXPR$0=AVG($1)), rowcount=1800.0, cumulative cost={inf}
	rel#386:RelSubset#17.ENUMERABLE.[], best=null
	rel#391:RelSubset#17.ENUMERABLE.[0], best=null
Set#18, type: RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR, BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME, INTEGER $f0, CHAR(50) I_CATEGORY0, DECIMAL(7, 2) EXPR$0)
	rel#311:RelSubset#18.NONE.[], best=null
		rel#310:LogicalJoin.NONE.[](left=RelSubset#305,right=RelSubset#309,condition=AND(=($94, $105), >($87, *(1.2:DECIMAL(2, 1), $106))),joinType=inner), rowcount=3.190781363581952E24, cumulative cost={inf}
	rel#388:RelSubset#18.ENUMERABLE.[], best=null
		rel#387:EnumerableHashJoin.ENUMERABLE.[](left=RelSubset#382,right=RelSubset#386,condition=AND(=($94, $105), >($87, *(1.2:DECIMAL(2, 1), $106))),joinType=inner), rowcount=1.9413339682690627E23, cumulative cost={inf}
		rel#392:EnumerableMergeJoin.ENUMERABLE.[[94], [105]](left=RelSubset#389,right=RelSubset#391,condition=AND(=($94, $105), >($87, *(1.2:DECIMAL(2, 1), $106))),joinType=inner), rowcount=3.190781363581952E24, cumulative cost={inf}
Set#19, type: RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR, BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME, INTEGER $f0, CHAR(50) I_CATEGORY0, DECIMAL(7, 2) EXPR$0)
	rel#313:RelSubset#19.NONE.[], best=null
		rel#312:LogicalProject.NONE.[](input=RelSubset#311,inputs=0..104,exprs=[CAST($105):CHAR(50), CAST($106):DECIMAL(7, 2)]), rowcount=3.190781363581952E24, cumulative cost={inf}
	rel#394:RelSubset#19.ENUMERABLE.[], best=null
		rel#393:EnumerableProject.ENUMERABLE.[](input=RelSubset#388,inputs=0..104,exprs=[CAST($105):CHAR(50), CAST($106):DECIMAL(7, 2)]), rowcount=3.190781363581952E24, cumulative cost={inf}
Set#20, type: RecordType(CHAR(2) CA_STATE)
	rel#315:RelSubset#20.NONE.[], best=null
		rel#314:LogicalProject.NONE.[](input=RelSubset#313,exprs=[$8]), rowcount=3.190781363581952E24, cumulative cost={inf}
	rel#396:RelSubset#20.ENUMERABLE.[], best=null
		rel#395:EnumerableProject.ENUMERABLE.[](input=RelSubset#394,exprs=[$8]), rowcount=3.190781363581952E24, cumulative cost={inf}
Set#21, type: RecordType(CHAR(2) CA_STATE, BIGINT CNT)
	rel#317:RelSubset#21.NONE.[], best=null
		rel#316:LogicalAggregate.NONE.[](input=RelSubset#315,group={0},CNT=COUNT()), rowcount=3.1907813635819525E23, cumulative cost={inf}
	rel#398:RelSubset#21.ENUMERABLE.[], best=null
		rel#397:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#396,group={0},CNT=COUNT()), rowcount=3.1907813635819525E23, cumulative cost={inf}
Set#22, type: RecordType(CHAR(2) CA_STATE, BIGINT CNT)
	rel#319:RelSubset#22.NONE.[], best=null
		rel#318:LogicalFilter.NONE.[](input=RelSubset#317,condition=>=($1, 10)), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#406:LogicalSort.NONE.[1, 0](input=RelSubset#319,sort0=$1,sort1=$0,dir0=ASC,dir1=ASC), rowcount=1.5953906817909763E23, cumulative cost={inf}
	rel#400:RelSubset#22.ENUMERABLE.[], best=null
		rel#399:EnumerableFilter.ENUMERABLE.[](input=RelSubset#398,condition=>=($1, 10)), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#413:AbstractConverter.ENUMERABLE.[1, 0](input=RelSubset#400,convention=ENUMERABLE,sort=[1, 0]), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#411:EnumerableSort.ENUMERABLE.[1, 0](input=RelSubset#400,sort0=$1,sort1=$0,dir0=ASC,dir1=ASC), rowcount=1.5953906817909763E23, cumulative cost={inf}
	rel#408:RelSubset#22.NONE.[1, 0], best=null
		rel#406:LogicalSort.NONE.[1, 0](input=RelSubset#319,sort0=$1,sort1=$0,dir0=ASC,dir1=ASC), rowcount=1.5953906817909763E23, cumulative cost={inf}
	rel#412:RelSubset#22.ENUMERABLE.[1, 0], best=null
		rel#413:AbstractConverter.ENUMERABLE.[1, 0](input=RelSubset#400,convention=ENUMERABLE,sort=[1, 0]), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#411:EnumerableSort.ENUMERABLE.[1, 0](input=RelSubset#400,sort0=$1,sort1=$0,dir0=ASC,dir1=ASC), rowcount=1.5953906817909763E23, cumulative cost={inf}
Set#23, type: RecordType(BIGINT CNT, CHAR(2) CA_STATE)
	rel#321:RelSubset#23.NONE.[], best=null
		rel#320:LogicalProject.NONE.[](input=RelSubset#319,exprs=[$1, $0]), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#322:LogicalSort.NONE.[0, 1](input=RelSubset#321,sort0=$0,sort1=$1,dir0=ASC,dir1=ASC), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#409:LogicalProject.NONE.[0, 1](input=RelSubset#408,exprs=[$1, $0]), rowcount=1.5953906817909763E23, cumulative cost={inf}
	rel#402:RelSubset#23.ENUMERABLE.[], best=null
		rel#401:EnumerableProject.ENUMERABLE.[](input=RelSubset#400,exprs=[$1, $0]), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#405:AbstractConverter.ENUMERABLE.[0, 1](input=RelSubset#402,convention=ENUMERABLE,sort=[0, 1]), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#325:AbstractConverter.ENUMERABLE.[0, 1](input=RelSubset#403,convention=ENUMERABLE,sort=[0, 1]), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#410:EnumerableSort.ENUMERABLE.[0, 1](input=RelSubset#402,sort0=$0,sort1=$1,dir0=ASC,dir1=ASC), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#414:EnumerableProject.ENUMERABLE.[0, 1](input=RelSubset#412,exprs=[$1, $0]), rowcount=1.5953906817909763E23, cumulative cost={inf}
	rel#403:RelSubset#23.NONE.[0, 1], best=null
		rel#322:LogicalSort.NONE.[0, 1](input=RelSubset#321,sort0=$0,sort1=$1,dir0=ASC,dir1=ASC), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#409:LogicalProject.NONE.[0, 1](input=RelSubset#408,exprs=[$1, $0]), rowcount=1.5953906817909763E23, cumulative cost={inf}
	rel#404:RelSubset#23.ENUMERABLE.[0, 1], best=null
		rel#405:AbstractConverter.ENUMERABLE.[0, 1](input=RelSubset#402,convention=ENUMERABLE,sort=[0, 1]), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#325:AbstractConverter.ENUMERABLE.[0, 1](input=RelSubset#403,convention=ENUMERABLE,sort=[0, 1]), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#410:EnumerableSort.ENUMERABLE.[0, 1](input=RelSubset#402,sort0=$0,sort1=$1,dir0=ASC,dir1=ASC), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#414:EnumerableProject.ENUMERABLE.[0, 1](input=RelSubset#412,exprs=[$1, $0]), rowcount=1.5953906817909763E23, cumulative cost={inf}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE)";
		rel38 [label="rel#38:LogicalTableScan\ntable=[TPCDS_5, CUSTOMER_ADDRESS]\nrows=50000.0, cost={inf}",shape=box]
		rel326 [label="rel#326:EnumerableTableScan\ntable=[TPCDS_5, CUSTOMER_ADDRESS]\nrows=50000.0, cost={50000.0 rows, 50001.0 cpu, 0.0 io}",color=blue,shape=box]
		rel333 [label="rel#333:AbstractConverter\ninput=RelSubset#327,convention=ENUMERABLE,sort=[0]\nrows=50000.0, cost={inf}",shape=box]
		subset279 [label="rel#279:RelSubset#0.NONE.[]"]
		subset327 [label="rel#327:RelSubset#0.ENUMERABLE.[]"]
		subset332 [label="rel#332:RelSubset#0.ENUMERABLE.[0]",color=red]
		subset327 -> subset332;	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK)";
		rel39 [label="rel#39:LogicalTableScan\ntable=[TPCDS_5, CUSTOMER]\nrows=100000.0, cost={inf}",shape=box]
		rel328 [label="rel#328:EnumerableTableScan\ntable=[TPCDS_5, CUSTOMER]\nrows=100000.0, cost={100000.0 rows, 100001.0 cpu, 0.0 io}",color=blue,shape=box]
		rel335 [label="rel#335:AbstractConverter\ninput=RelSubset#329,convention=ENUMERABLE,sort=[4]\nrows=100000.0, cost={inf}",shape=box]
		subset280 [label="rel#280:RelSubset#1.NONE.[]"]
		subset329 [label="rel#329:RelSubset#1.ENUMERABLE.[]"]
		subset334 [label="rel#334:RelSubset#1.ENUMERABLE.[4]",color=red]
		subset329 -> subset334;	}
	subgraph cluster2{
		label="Set 2 RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK)";
		rel281 [label="rel#281:LogicalJoin\nleft=RelSubset#279,right=RelSubset#280,condition==($0, $17),joinType=inner\nrows=7.5E8, cost={inf}",shape=box]
		rel330 [label="rel#330:EnumerableHashJoin\nleft=RelSubset#327,right=RelSubset#329,condition==($0, $17),joinType=inner\nrows=7.5E8, cost={7.507909899142206E8 rows, 150002.0 cpu, 0.0 io}",color=blue,shape=box]
		rel336 [label="rel#336:EnumerableMergeJoin.ENUMERABLE.[[0], [17]]\nleft=RelSubset#332,right=RelSubset#334,condition==($0, $17),joinType=inner\nrows=7.5E8, cost={inf}",shape=box]
		rel342 [label="rel#342:AbstractConverter\ninput=RelSubset#331,convention=ENUMERABLE,sort=[13]\nrows=7.5E8, cost={inf}",shape=box]
		subset282 [label="rel#282:RelSubset#2.NONE.[]"]
		subset331 [label="rel#331:RelSubset#2.ENUMERABLE.[]"]
		subset341 [label="rel#341:RelSubset#2.ENUMERABLE.[13]",color=red]
		subset331 -> subset341;	}
	subgraph cluster3{
		label="Set 3 RecordType(BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT)";
		rel41 [label="rel#41:LogicalTableScan\ntable=[TPCDS_5, STORE_SALES]\nrows=2880404.0, cost={inf}",shape=box]
		rel337 [label="rel#337:EnumerableTableScan\ntable=[TPCDS_5, STORE_SALES]\nrows=2880404.0, cost={2880404.0 rows, 2880405.0 cpu, 0.0 io}",color=blue,shape=box]
		rel344 [label="rel#344:AbstractConverter\ninput=RelSubset#338,convention=ENUMERABLE,sort=[3]\nrows=2880404.0, cost={inf}",shape=box]
		subset283 [label="rel#283:RelSubset#3.NONE.[]"]
		subset338 [label="rel#338:RelSubset#3.ENUMERABLE.[]"]
		subset343 [label="rel#343:RelSubset#3.ENUMERABLE.[3]",color=red]
		subset338 -> subset343;	}
	subgraph cluster4{
		label="Set 4 RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT)";
		rel284 [label="rel#284:LogicalJoin\nleft=RelSubset#282,right=RelSubset#283,condition==($13, $34),joinType=inner\nrows=3.2404545E14, cost={inf}",shape=box]
		rel339 [label="rel#339:EnumerableHashJoin\nleft=RelSubset#331,right=RelSubset#338,condition==($13, $34),joinType=inner\nrows=3.2404545E14, cost={3.240615332396213E14 rows, 3030407.0 cpu, 0.0 io}",color=blue,shape=box]
		rel345 [label="rel#345:EnumerableMergeJoin.ENUMERABLE.[[13], [34]]\nleft=RelSubset#341,right=RelSubset#343,condition==($13, $34),joinType=inner\nrows=3.2404545E14, cost={inf}",shape=box]
		rel351 [label="rel#351:AbstractConverter\ninput=RelSubset#340,convention=ENUMERABLE,sort=[31]\nrows=3.2404545E14, cost={inf}",shape=box]
		subset285 [label="rel#285:RelSubset#4.NONE.[]"]
		subset340 [label="rel#340:RelSubset#4.ENUMERABLE.[]"]
		subset350 [label="rel#350:RelSubset#4.ENUMERABLE.[31]",color=red]
		subset340 -> subset350;	}
	subgraph cluster5{
		label="Set 5 RecordType(BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR)";
		rel43 [label="rel#43:LogicalTableScan\ntable=[TPCDS_5, DATE_DIM]\nrows=73049.0, cost={inf}",shape=box]
		rel346 [label="rel#346:EnumerableTableScan\ntable=[TPCDS_5, DATE_DIM]\nrows=73049.0, cost={73049.0 rows, 73050.0 cpu, 0.0 io}",color=blue,shape=box]
		rel353 [label="rel#353:AbstractConverter\ninput=RelSubset#347,convention=ENUMERABLE,sort=[0]\nrows=73049.0, cost={inf}",shape=box]
		subset286 [label="rel#286:RelSubset#5.NONE.[]"]
		subset347 [label="rel#347:RelSubset#5.ENUMERABLE.[]"]
		subset352 [label="rel#352:RelSubset#5.ENUMERABLE.[0]",color=red]
		subset347 -> subset352;	}
	subgraph cluster6{
		label="Set 6 RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR)";
		rel287 [label="rel#287:LogicalJoin\nleft=RelSubset#285,right=RelSubset#286,condition==($31, $54),joinType=inner\nrows=3.5506794115574999E18, cost={inf}",shape=box]
		rel348 [label="rel#348:EnumerableHashJoin\nleft=RelSubset#340,right=RelSubset#347,condition==($31, $54),joinType=inner\nrows=3.5506794115574999E18, cost={3.5618304488494541E18 rows, 3103457.0 cpu, 0.0 io}",color=blue,shape=box]
		rel354 [label="rel#354:EnumerableMergeJoin.ENUMERABLE.[[31], [54]]\nleft=RelSubset#350,right=RelSubset#352,condition==($31, $54),joinType=inner\nrows=3.5506794115574999E18, cost={inf}",shape=box]
		rel360 [label="rel#360:AbstractConverter\ninput=RelSubset#349,convention=ENUMERABLE,sort=[33]\nrows=3.5506794115574999E18, cost={inf}",shape=box]
		subset288 [label="rel#288:RelSubset#6.NONE.[]"]
		subset349 [label="rel#349:RelSubset#6.ENUMERABLE.[]"]
		subset359 [label="rel#359:RelSubset#6.ENUMERABLE.[33]",color=red]
		subset349 -> subset359;	}
	subgraph cluster7{
		label="Set 7 RecordType(BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME)";
		rel45 [label="rel#45:LogicalTableScan\ntable=[TPCDS_5, ITEM]\nrows=18000.0, cost={inf}",shape=box]
		rel355 [label="rel#355:EnumerableTableScan\ntable=[TPCDS_5, ITEM]\nrows=18000.0, cost={18000.0 rows, 18001.0 cpu, 0.0 io}",color=blue,shape=box]
		rel362 [label="rel#362:AbstractConverter\ninput=RelSubset#356,convention=ENUMERABLE,sort=[0]\nrows=18000.0, cost={inf}",shape=box]
		subset289 [label="rel#289:RelSubset#7.NONE.[]"]
		subset356 [label="rel#356:RelSubset#7.ENUMERABLE.[]"]
		subset361 [label="rel#361:RelSubset#7.ENUMERABLE.[0]",color=red]
		subset356 -> subset361;	}
	subgraph cluster8{
		label="Set 8 RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR, BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME)";
		rel290 [label="rel#290:LogicalJoin\nleft=RelSubset#288,right=RelSubset#289,condition==($33, $82),joinType=inner\nrows=9.586834411205249E21, cost={inf}",shape=box]
		rel357 [label="rel#357:EnumerableHashJoin\nleft=RelSubset#349,right=RelSubset#356,condition==($33, $82),joinType=inner\nrows=9.586834411205249E21, cost={9.742058792596848E21 rows, 3121458.0 cpu, 0.0 io}",color=blue,shape=box]
		rel363 [label="rel#363:EnumerableMergeJoin.ENUMERABLE.[[33], [82]]\nleft=RelSubset#359,right=RelSubset#361,condition==($33, $82),joinType=inner\nrows=9.586834411205249E21, cost={inf}",shape=box]
		rel377 [label="rel#377:AbstractConverter\ninput=RelSubset#358,convention=ENUMERABLE,sort=[57]\nrows=9.586834411205249E21, cost={inf}",shape=box]
		subset291 [label="rel#291:RelSubset#8.NONE.[]"]
		subset358 [label="rel#358:RelSubset#8.ENUMERABLE.[]"]
		subset376 [label="rel#376:RelSubset#8.ENUMERABLE.[57]",color=red]
		subset358 -> subset376;	}
	subgraph cluster9{
		label="Set 9 RecordType(BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR)";
		rel292 [label="rel#292:LogicalFilter\ninput=RelSubset#286,condition=AND(=($6, 2002), =($8, 3))\nrows=1643.6025, cost={inf}",shape=box]
		rel364 [label="rel#364:EnumerableFilter\ninput=RelSubset#347,condition=AND(=($6, 2002), =($8, 3))\nrows=1643.6025, cost={74692.6025 rows, 146099.0 cpu, 0.0 io}",color=blue,shape=box]
		subset293 [label="rel#293:RelSubset#9.NONE.[]"]
		subset365 [label="rel#365:RelSubset#9.ENUMERABLE.[]"]
	}
	subgraph cluster10{
		label="Set 10 RecordType(INTEGER D_MONTH_SEQ)";
		rel294 [label="rel#294:LogicalProject\ninput=RelSubset#293,exprs=[$3]\nrows=1643.6025, cost={inf}",shape=box]
		rel366 [label="rel#366:EnumerableProject\ninput=RelSubset#365,exprs=[$3]\nrows=1643.6025, cost={76336.20499999999 rows, 147742.6025 cpu, 0.0 io}",color=blue,shape=box]
		subset295 [label="rel#295:RelSubset#10.NONE.[]"]
		subset367 [label="rel#367:RelSubset#10.ENUMERABLE.[]"]
	}
	subgraph cluster11{
		label="Set 11 RecordType(INTEGER D_MONTH_SEQ)";
		rel296 [label="rel#296:LogicalAggregate\ninput=RelSubset#295,group={0}\nrows=164.36025, cost={inf}",shape=box]
		rel368 [label="rel#368:EnumerableAggregate\ninput=RelSubset#367,group={0}\nrows=164.36025, cost={76500.56524999999 rows, 147742.6025 cpu, 0.0 io}",color=blue,shape=box]
		subset297 [label="rel#297:RelSubset#11.NONE.[]"]
		subset369 [label="rel#369:RelSubset#11.ENUMERABLE.[]"]
	}
	subgraph cluster12{
		label="Set 12 RecordType(INTEGER D_MONTH_SEQ)";
		rel298 [label="rel#298:LogicalProject\ninput=RelSubset#297,inputs=0\nrows=164.36025, cost={inf}",shape=box]
		rel370 [label="rel#370:EnumerableProject\ninput=RelSubset#369,inputs=0\nrows=164.36025, cost={76664.92549999998 rows, 147906.96275 cpu, 0.0 io}",color=blue,shape=box]
		subset299 [label="rel#299:RelSubset#12.NONE.[]"]
		subset371 [label="rel#371:RelSubset#12.ENUMERABLE.[]"]
	}
	subgraph cluster13{
		label="Set 13 RecordType(INTEGER $f0)";
		rel300 [label="rel#300:LogicalAggregate\ninput=RelSubset#299,group={},agg#0=SINGLE_VALUE($0)\nrows=16.436025, cost={inf}",shape=box]
		rel372 [label="rel#372:EnumerableAggregate\ninput=RelSubset#371,group={},agg#0=SINGLE_VALUE($0)\nrows=1.0, cost={76666.05049999998 rows, 147906.96275 cpu, 0.0 io}",color=blue,shape=box]
		rel379 [label="rel#379:AbstractConverter\ninput=RelSubset#373,convention=ENUMERABLE,sort=[0]\nrows=1.0, cost={inf}",shape=box]
		subset301 [label="rel#301:RelSubset#13.NONE.[]"]
		subset373 [label="rel#373:RelSubset#13.ENUMERABLE.[]"]
		subset378 [label="rel#378:RelSubset#13.ENUMERABLE.[0]",color=red]
		subset373 -> subset378;	}
	subgraph cluster14{
		label="Set 14 RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR, BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME, INTEGER $f0)";
		rel302 [label="rel#302:LogicalJoin\nleft=RelSubset#291,right=RelSubset#301,condition==($57, $104),joinType=inner\nrows=2.363541750801446E22, cost={inf}",shape=box]
		rel374 [label="rel#374:EnumerableHashJoin\nleft=RelSubset#358,right=RelSubset#373,condition==($57, $104),joinType=inner\nrows=1.4380251616807873E21, cost={4.964146177889163E23 rows, 3269364.96275 cpu, 0.0 io}",color=blue,shape=box]
		rel380 [label="rel#380:EnumerableMergeJoin.ENUMERABLE.[[57], [104]]\nleft=RelSubset#376,right=RelSubset#378,condition==($57, $104),joinType=inner\nrows=2.363541750801446E22, cost={inf}",shape=box]
		subset303 [label="rel#303:RelSubset#14.NONE.[]"]
		subset375 [label="rel#375:RelSubset#14.ENUMERABLE.[]"]
	}
	subgraph cluster15{
		label="Set 15 RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR, BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME, INTEGER $f0)";
		rel304 [label="rel#304:LogicalProject\ninput=RelSubset#303,inputs=0..103,exprs=[CAST($104):INTEGER]\nrows=2.363541750801446E22, cost={inf}",shape=box]
		rel381 [label="rel#381:EnumerableProject\ninput=RelSubset#375,inputs=0..103,exprs=[CAST($104):INTEGER]\nrows=1.4380251616807873E21, cost={4.978526429505971E23 rows, 1.5099264197648267E23 cpu, 0.0 io}",color=blue,shape=box]
		rel390 [label="rel#390:AbstractConverter\ninput=RelSubset#382,convention=ENUMERABLE,sort=[94]\nrows=1.4380251616807873E21, cost={inf}",shape=box]
		subset305 [label="rel#305:RelSubset#15.NONE.[]"]
		subset382 [label="rel#382:RelSubset#15.ENUMERABLE.[]"]
		subset389 [label="rel#389:RelSubset#15.ENUMERABLE.[94]",color=red]
		subset382 -> subset389;	}
	subgraph cluster16{
		label="Set 16 RecordType(CHAR(50) I_CATEGORY, DECIMAL(7, 2) I_CURRENT_PRICE)";
		rel306 [label="rel#306:LogicalProject\ninput=RelSubset#289,exprs=[$12, $5]\nrows=18000.0, cost={inf}",shape=box]
		rel383 [label="rel#383:EnumerableProject\ninput=RelSubset#356,exprs=[$12, $5]\nrows=18000.0, cost={36000.0 rows, 54001.0 cpu, 0.0 io}",color=blue,shape=box]
		subset307 [label="rel#307:RelSubset#16.NONE.[]"]
		subset384 [label="rel#384:RelSubset#16.ENUMERABLE.[]"]
	}
	subgraph cluster17{
		label="Set 17 RecordType(CHAR(50) I_CATEGORY, DECIMAL(7, 2) EXPR$0)";
		rel308 [label="rel#308:LogicalAggregate\ninput=RelSubset#307,group={0},EXPR$0=AVG($1)\nrows=1800.0, cost={inf}",shape=box]
		subset309 [label="rel#309:RelSubset#17.NONE.[]"]
		subset386 [label="rel#386:RelSubset#17.ENUMERABLE.[]",color=red]
		subset391 [label="rel#391:RelSubset#17.ENUMERABLE.[0]",color=red]
		subset386 -> subset391;	}
	subgraph cluster18{
		label="Set 18 RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR, BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME, INTEGER $f0, CHAR(50) I_CATEGORY0, DECIMAL(7, 2) EXPR$0)";
		rel310 [label="rel#310:LogicalJoin\nleft=RelSubset#305,right=RelSubset#309,condition=AND(=($94, $105), >($87, *(1.2:DECIMAL(2, 1), $106))),joinType=inner\nrows=3.190781363581952E24, cost={inf}",shape=box]
		rel387 [label="rel#387:EnumerableHashJoin\nleft=RelSubset#382,right=RelSubset#386,condition=AND(=($94, $105), >($87, *(1.2:DECIMAL(2, 1), $106))),joinType=inner\nrows=1.9413339682690627E23, cost={inf}",shape=box]
		rel392 [label="rel#392:EnumerableMergeJoin.ENUMERABLE.[[94], [105]]\nleft=RelSubset#389,right=RelSubset#391,condition=AND(=($94, $105), >($87, *(1.2:DECIMAL(2, 1), $106))),joinType=inner\nrows=3.190781363581952E24, cost={inf}",shape=box]
		subset311 [label="rel#311:RelSubset#18.NONE.[]"]
		subset388 [label="rel#388:RelSubset#18.ENUMERABLE.[]"]
	}
	subgraph cluster19{
		label="Set 19 RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR, BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME, INTEGER $f0, CHAR(50) I_CATEGORY0, DECIMAL(7, 2) EXPR$0)";
		rel312 [label="rel#312:LogicalProject\ninput=RelSubset#311,inputs=0..104,exprs=[CAST($105):CHAR(50), CAST($106):DECIMAL(7, 2)]\nrows=3.190781363581952E24, cost={inf}",shape=box]
		rel393 [label="rel#393:EnumerableProject\ninput=RelSubset#388,inputs=0..104,exprs=[CAST($105):CHAR(50), CAST($106):DECIMAL(7, 2)]\nrows=3.190781363581952E24, cost={inf}",shape=box]
		subset313 [label="rel#313:RelSubset#19.NONE.[]"]
		subset394 [label="rel#394:RelSubset#19.ENUMERABLE.[]"]
	}
	subgraph cluster20{
		label="Set 20 RecordType(CHAR(2) CA_STATE)";
		rel314 [label="rel#314:LogicalProject\ninput=RelSubset#313,exprs=[$8]\nrows=3.190781363581952E24, cost={inf}",shape=box]
		rel395 [label="rel#395:EnumerableProject\ninput=RelSubset#394,exprs=[$8]\nrows=3.190781363581952E24, cost={inf}",shape=box]
		subset315 [label="rel#315:RelSubset#20.NONE.[]"]
		subset396 [label="rel#396:RelSubset#20.ENUMERABLE.[]"]
	}
	subgraph cluster21{
		label="Set 21 RecordType(CHAR(2) CA_STATE, BIGINT CNT)";
		rel316 [label="rel#316:LogicalAggregate\ninput=RelSubset#315,group={0},CNT=COUNT()\nrows=3.1907813635819525E23, cost={inf}",shape=box]
		rel397 [label="rel#397:EnumerableAggregate\ninput=RelSubset#396,group={0},CNT=COUNT()\nrows=3.1907813635819525E23, cost={inf}",shape=box]
		subset317 [label="rel#317:RelSubset#21.NONE.[]"]
		subset398 [label="rel#398:RelSubset#21.ENUMERABLE.[]"]
	}
	subgraph cluster22{
		label="Set 22 RecordType(CHAR(2) CA_STATE, BIGINT CNT)";
		rel318 [label="rel#318:LogicalFilter\ninput=RelSubset#317,condition=>=($1, 10)\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		rel399 [label="rel#399:EnumerableFilter\ninput=RelSubset#398,condition=>=($1, 10)\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		rel406 [label="rel#406:LogicalSort\ninput=RelSubset#319,sort0=$1,sort1=$0,dir0=ASC,dir1=ASC\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		rel413 [label="rel#413:AbstractConverter\ninput=RelSubset#400,convention=ENUMERABLE,sort=[1, 0]\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		rel411 [label="rel#411:EnumerableSort\ninput=RelSubset#400,sort0=$1,sort1=$0,dir0=ASC,dir1=ASC\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		subset319 [label="rel#319:RelSubset#22.NONE.[]"]
		subset400 [label="rel#400:RelSubset#22.ENUMERABLE.[]"]
		subset408 [label="rel#408:RelSubset#22.NONE.[1, 0]"]
		subset412 [label="rel#412:RelSubset#22.ENUMERABLE.[1, 0]"]
		subset319 -> subset408;		subset400 -> subset412;	}
	subgraph cluster23{
		label="Set 23 RecordType(BIGINT CNT, CHAR(2) CA_STATE)";
		rel320 [label="rel#320:LogicalProject\ninput=RelSubset#319,exprs=[$1, $0]\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		rel401 [label="rel#401:EnumerableProject\ninput=RelSubset#400,exprs=[$1, $0]\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		rel405 [label="rel#405:AbstractConverter\ninput=RelSubset#402,convention=ENUMERABLE,sort=[0, 1]\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		rel322 [label="rel#322:LogicalSort\ninput=RelSubset#321,sort0=$0,sort1=$1,dir0=ASC,dir1=ASC\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		rel325 [label="rel#325:AbstractConverter\ninput=RelSubset#403,convention=ENUMERABLE,sort=[0, 1]\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		rel409 [label="rel#409:LogicalProject\ninput=RelSubset#408,exprs=[$1, $0]\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		rel410 [label="rel#410:EnumerableSort\ninput=RelSubset#402,sort0=$0,sort1=$1,dir0=ASC,dir1=ASC\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		rel414 [label="rel#414:EnumerableProject\ninput=RelSubset#412,exprs=[$1, $0]\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		subset321 [label="rel#321:RelSubset#23.NONE.[]"]
		subset402 [label="rel#402:RelSubset#23.ENUMERABLE.[]"]
		subset403 [label="rel#403:RelSubset#23.NONE.[0, 1]"]
		subset404 [label="rel#404:RelSubset#23.ENUMERABLE.[0, 1]"]
		subset402 -> subset404;		subset321 -> subset403;	}
	root -> subset404;
	subset279 -> rel38;
	subset327 -> rel326[color=blue];
	subset332 -> rel333; rel333 -> subset327;
	subset280 -> rel39;
	subset329 -> rel328[color=blue];
	subset334 -> rel335; rel335 -> subset329;
	subset282 -> rel281; rel281 -> subset279[label="0"]; rel281 -> subset280[label="1"];
	subset331 -> rel330[color=blue]; rel330 -> subset327[color=blue,label="0"]; rel330 -> subset329[color=blue,label="1"];
	subset331 -> rel336; rel336 -> subset332[label="0"]; rel336 -> subset334[label="1"];
	subset341 -> rel342; rel342 -> subset331;
	subset283 -> rel41;
	subset338 -> rel337[color=blue];
	subset343 -> rel344; rel344 -> subset338;
	subset285 -> rel284; rel284 -> subset282[label="0"]; rel284 -> subset283[label="1"];
	subset340 -> rel339[color=blue]; rel339 -> subset331[color=blue,label="0"]; rel339 -> subset338[color=blue,label="1"];
	subset340 -> rel345; rel345 -> subset341[label="0"]; rel345 -> subset343[label="1"];
	subset350 -> rel351; rel351 -> subset340;
	subset286 -> rel43;
	subset347 -> rel346[color=blue];
	subset352 -> rel353; rel353 -> subset347;
	subset288 -> rel287; rel287 -> subset285[label="0"]; rel287 -> subset286[label="1"];
	subset349 -> rel348[color=blue]; rel348 -> subset340[color=blue,label="0"]; rel348 -> subset347[color=blue,label="1"];
	subset349 -> rel354; rel354 -> subset350[label="0"]; rel354 -> subset352[label="1"];
	subset359 -> rel360; rel360 -> subset349;
	subset289 -> rel45;
	subset356 -> rel355[color=blue];
	subset361 -> rel362; rel362 -> subset356;
	subset291 -> rel290; rel290 -> subset288[label="0"]; rel290 -> subset289[label="1"];
	subset358 -> rel357[color=blue]; rel357 -> subset349[color=blue,label="0"]; rel357 -> subset356[color=blue,label="1"];
	subset358 -> rel363; rel363 -> subset359[label="0"]; rel363 -> subset361[label="1"];
	subset376 -> rel377; rel377 -> subset358;
	subset293 -> rel292; rel292 -> subset286;
	subset365 -> rel364[color=blue]; rel364 -> subset347[color=blue];
	subset295 -> rel294; rel294 -> subset293;
	subset367 -> rel366[color=blue]; rel366 -> subset365[color=blue];
	subset297 -> rel296; rel296 -> subset295;
	subset369 -> rel368[color=blue]; rel368 -> subset367[color=blue];
	subset299 -> rel298; rel298 -> subset297;
	subset371 -> rel370[color=blue]; rel370 -> subset369[color=blue];
	subset301 -> rel300; rel300 -> subset299;
	subset373 -> rel372[color=blue]; rel372 -> subset371[color=blue];
	subset378 -> rel379; rel379 -> subset373;
	subset303 -> rel302; rel302 -> subset291[label="0"]; rel302 -> subset301[label="1"];
	subset375 -> rel374[color=blue]; rel374 -> subset358[color=blue,label="0"]; rel374 -> subset373[color=blue,label="1"];
	subset375 -> rel380; rel380 -> subset376[label="0"]; rel380 -> subset378[label="1"];
	subset305 -> rel304; rel304 -> subset303;
	subset382 -> rel381[color=blue]; rel381 -> subset375[color=blue];
	subset389 -> rel390; rel390 -> subset382;
	subset307 -> rel306; rel306 -> subset289;
	subset384 -> rel383[color=blue]; rel383 -> subset356[color=blue];
	subset309 -> rel308; rel308 -> subset307;
	subset311 -> rel310; rel310 -> subset305[label="0"]; rel310 -> subset309[label="1"];
	subset388 -> rel387; rel387 -> subset382[label="0"]; rel387 -> subset386[label="1"];
	subset388 -> rel392; rel392 -> subset389[label="0"]; rel392 -> subset391[label="1"];
	subset313 -> rel312; rel312 -> subset311;
	subset394 -> rel393; rel393 -> subset388;
	subset315 -> rel314; rel314 -> subset313;
	subset396 -> rel395; rel395 -> subset394;
	subset317 -> rel316; rel316 -> subset315;
	subset398 -> rel397; rel397 -> subset396;
	subset319 -> rel318; rel318 -> subset317;
	subset400 -> rel399; rel399 -> subset398;
	subset408 -> rel406; rel406 -> subset319;
	subset412 -> rel413; rel413 -> subset400;
	subset412 -> rel411; rel411 -> subset400;
	subset321 -> rel320; rel320 -> subset319;
	subset402 -> rel401; rel401 -> subset400;
	subset404 -> rel405; rel405 -> subset402;
	subset403 -> rel322; rel322 -> subset321;
	subset404 -> rel325; rel325 -> subset403;
	subset403 -> rel409; rel409 -> subset408;
	subset404 -> rel410; rel410 -> subset402;
	subset404 -> rel414; rel414 -> subset412;
}
	at calcite.test.tpcds.TestPlannerGeneral.lambda$main$0(TestPlannerGeneral.java:63)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at calcite.test.tpcds.TestPlannerGeneral.main(TestPlannerGeneral.java:59)
Caused by: org.apache.calcite.plan.RelOptPlanner$CannotPlanException: There are not enough rules to produce a node with desired properties: convention=ENUMERABLE, sort=[0, 1].
Missing conversions are LogicalAggregate[convention: NONE -> ENUMERABLE, sort: [] -> [0]], LogicalAggregate[convention: NONE -> ENUMERABLE], LogicalProject[convention: NONE -> ENUMERABLE, sort: [] -> [94]]
There are 3 empty subsets:
Empty subset 0: rel#386:RelSubset#17.ENUMERABLE.[], the relevant part of the original plan is as follows
308:LogicalAggregate(group=[{0}], EXPR$0=[AVG($1)])
  306:LogicalProject(subset=[rel#307:RelSubset#16.NONE.[]], I_CATEGORY=[$12], I_CURRENT_PRICE=[$5])
    45:LogicalTableScan(subset=[rel#289:RelSubset#7.NONE.[]], table=[[TPCDS_5, ITEM]])

Empty subset 1: rel#389:RelSubset#15.ENUMERABLE.[94], the relevant part of the original plan is as follows
304:LogicalProject(CA_ADDRESS_SK=[$0], CA_ADDRESS_ID=[$1], CA_STREET_NUMBER=[$2], CA_STREET_NAME=[$3], CA_STREET_TYPE=[$4], CA_SUITE_NUMBER=[$5], CA_CITY=[$6], CA_COUNTY=[$7], CA_STATE=[$8], CA_ZIP=[$9], CA_COUNTRY=[$10], CA_GMT_OFFSET=[$11], CA_LOCATION_TYPE=[$12], C_CUSTOMER_SK=[$13], C_CUSTOMER_ID=[$14], C_CURRENT_CDEMO_SK=[$15], C_CURRENT_HDEMO_SK=[$16], C_CURRENT_ADDR_SK=[$17], C_FIRST_SHIPTO_DATE_SK=[$18], C_FIRST_SALES_DATE_SK=[$19], C_SALUTATION=[$20], C_FIRST_NAME=[$21], C_LAST_NAME=[$22], C_PREFERRED_CUST_FLAG=[$23], C_BIRTH_DAY=[$24], C_BIRTH_MONTH=[$25], C_BIRTH_YEAR=[$26], C_BIRTH_COUNTRY=[$27], C_LOGIN=[$28], C_EMAIL_ADDRESS=[$29], C_LAST_REVIEW_DATE_SK=[$30], SS_SOLD_DATE_SK=[$31], SS_SOLD_TIME_SK=[$32], SS_ITEM_SK=[$33], SS_CUSTOMER_SK=[$34], SS_CDEMO_SK=[$35], SS_HDEMO_SK=[$36], SS_ADDR_SK=[$37], SS_STORE_SK=[$38], SS_PROMO_SK=[$39], SS_TICKET_NUMBER=[$40], SS_QUANTITY=[$41], SS_WHOLESALE_COST=[$42], SS_LIST_PRICE=[$43], SS_SALES_PRICE=[$44], SS_EXT_DISCOUNT_AMT=[$45], SS_EXT_SALES_PRICE=[$46], SS_EXT_WHOLESALE_COST=[$47], SS_EXT_LIST_PRICE=[$48], SS_EXT_TAX=[$49], SS_COUPON_AMT=[$50], SS_NET_PAID=[$51], SS_NET_PAID_INC_TAX=[$52], SS_NET_PROFIT=[$53], D_DATE_SK=[$54], D_DATE_ID=[$55], D_DATE=[$56], D_MONTH_SEQ=[$57], D_WEEK_SEQ=[$58], D_QUARTER_SEQ=[$59], D_YEAR=[$60], D_DOW=[$61], D_MOY=[$62], D_DOM=[$63], D_QOY=[$64], D_FY_YEAR=[$65], D_FY_QUARTER_SEQ=[$66], D_FY_WEEK_SEQ=[$67], D_DAY_NAME=[$68], D_QUARTER_NAME=[$69], D_HOLIDAY=[$70], D_WEEKEND=[$71], D_FOLLOWING_HOLIDAY=[$72], D_FIRST_DOM=[$73], D_LAST_DOM=[$74], D_SAME_DAY_LY=[$75], D_SAME_DAY_LQ=[$76], D_CURRENT_DAY=[$77], D_CURRENT_WEEK=[$78], D_CURRENT_MONTH=[$79], D_CURRENT_QUARTER=[$80], D_CURRENT_YEAR=[$81], I_ITEM_SK=[$82], I_ITEM_ID=[$83], I_REC_START_DATE=[$84], I_REC_END_DATE=[$85], I_ITEM_DESC=[$86], I_CURRENT_PRICE=[$87], I_WHOLESALE_COST=[$88], I_BRAND_ID=[$89], I_BRAND=[$90], I_CLASS_ID=[$91], I_CLASS=[$92], I_CATEGORY_ID=[$93], I_CATEGORY=[$94], I_MANUFACT_ID=[$95], I_MANUFACT=[$96], I_SIZE=[$97], I_FORMULATION=[$98], I_COLOR=[$99], I_UNITS=[$100], I_CONTAINER=[$101], I_MANAGER_ID=[$102], I_PRODUCT_NAME=[$103], $f0=[CAST($104):INTEGER])
  302:LogicalJoin(subset=[rel#303:RelSubset#14.NONE.[]], condition=[=($57, $104)], joinType=[inner])
    290:LogicalJoin(subset=[rel#291:RelSubset#8.NONE.[]], condition=[=($33, $82)], joinType=[inner])
      287:LogicalJoin(subset=[rel#288:RelSubset#6.NONE.[]], condition=[=($31, $54)], joinType=[inner])
        284:LogicalJoin(subset=[rel#285:RelSubset#4.NONE.[]], condition=[=($13, $34)], joinType=[inner])
          281:LogicalJoin(subset=[rel#282:RelSubset#2.NONE.[]], condition=[=($0, $17)], joinType=[inner])
            38:LogicalTableScan(subset=[rel#279:RelSubset#0.NONE.[]], table=[[TPCDS_5, CUSTOMER_ADDRESS]])
            39:LogicalTableScan(subset=[rel#280:RelSubset#1.NONE.[]], table=[[TPCDS_5, CUSTOMER]])
          41:LogicalTableScan(subset=[rel#283:RelSubset#3.NONE.[]], table=[[TPCDS_5, STORE_SALES]])
        43:LogicalTableScan(subset=[rel#286:RelSubset#5.NONE.[]], table=[[TPCDS_5, DATE_DIM]])
      45:LogicalTableScan(subset=[rel#289:RelSubset#7.NONE.[]], table=[[TPCDS_5, ITEM]])
    300:LogicalAggregate(subset=[rel#301:RelSubset#13.NONE.[]], group=[{}], agg#0=[SINGLE_VALUE($0)])
      298:LogicalProject(subset=[rel#299:RelSubset#12.NONE.[]], D_MONTH_SEQ=[$0])
        296:LogicalAggregate(subset=[rel#297:RelSubset#11.NONE.[]], group=[{0}])
          294:LogicalProject(subset=[rel#295:RelSubset#10.NONE.[]], D_MONTH_SEQ=[$3])
            292:LogicalFilter(subset=[rel#293:RelSubset#9.NONE.[]], condition=[AND(=($6, 2002), =($8, 3))])
              43:LogicalTableScan(subset=[rel#286:RelSubset#5.NONE.[]], table=[[TPCDS_5, DATE_DIM]])

Empty subset 2: rel#391:RelSubset#17.ENUMERABLE.[0], the relevant part of the original plan is as follows
308:LogicalAggregate(group=[{0}], EXPR$0=[AVG($1)])
  306:LogicalProject(subset=[rel#307:RelSubset#16.NONE.[]], I_CATEGORY=[$12], I_CURRENT_PRICE=[$5])
    45:LogicalTableScan(subset=[rel#289:RelSubset#7.NONE.[]], table=[[TPCDS_5, ITEM]])

Root: rel#404:RelSubset#23.ENUMERABLE.[0, 1]
Original rel:
LogicalSort(subset=[rel#324:RelSubset#24.ENUMERABLE.[0, 1]], sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC]): rowcount = 1.5953906817909763E23, cumulative cost = {1.5953906817909763E23 rows, 1.7047252234010007E26 cpu, 0.0 io}, id = 322
  LogicalProject(subset=[rel#321:RelSubset#23.NONE.[]], CNT=[$1], CA_STATE=[$0]): rowcount = 1.5953906817909763E23, cumulative cost = {1.5953906817909763E23 rows, 3.1907813635819525E23 cpu, 0.0 io}, id = 320
    LogicalFilter(subset=[rel#319:RelSubset#22.NONE.[]], condition=[>=($1, 10)]): rowcount = 1.5953906817909763E23, cumulative cost = {1.5953906817909763E23 rows, 3.1907813635819525E23 cpu, 0.0 io}, id = 318
      LogicalAggregate(subset=[rel#317:RelSubset#21.NONE.[]], group=[{0}], CNT=[COUNT()]): rowcount = 3.1907813635819525E23, cumulative cost = {3.5896290340296964E23 rows, 0.0 cpu, 0.0 io}, id = 316
        LogicalProject(subset=[rel#315:RelSubset#20.NONE.[]], CA_STATE=[$8]): rowcount = 3.190781363581952E24, cumulative cost = {3.190781363581952E24 rows, 3.190781363581952E24 cpu, 0.0 io}, id = 314
          LogicalProject(subset=[rel#313:RelSubset#19.NONE.[]], CA_ADDRESS_SK=[$0], CA_ADDRESS_ID=[$1], CA_STREET_NUMBER=[$2], CA_STREET_NAME=[$3], CA_STREET_TYPE=[$4], CA_SUITE_NUMBER=[$5], CA_CITY=[$6], CA_COUNTY=[$7], CA_STATE=[$8], CA_ZIP=[$9], CA_COUNTRY=[$10], CA_GMT_OFFSET=[$11], CA_LOCATION_TYPE=[$12], C_CUSTOMER_SK=[$13], C_CUSTOMER_ID=[$14], C_CURRENT_CDEMO_SK=[$15], C_CURRENT_HDEMO_SK=[$16], C_CURRENT_ADDR_SK=[$17], C_FIRST_SHIPTO_DATE_SK=[$18], C_FIRST_SALES_DATE_SK=[$19], C_SALUTATION=[$20], C_FIRST_NAME=[$21], C_LAST_NAME=[$22], C_PREFERRED_CUST_FLAG=[$23], C_BIRTH_DAY=[$24], C_BIRTH_MONTH=[$25], C_BIRTH_YEAR=[$26], C_BIRTH_COUNTRY=[$27], C_LOGIN=[$28], C_EMAIL_ADDRESS=[$29], C_LAST_REVIEW_DATE_SK=[$30], SS_SOLD_DATE_SK=[$31], SS_SOLD_TIME_SK=[$32], SS_ITEM_SK=[$33], SS_CUSTOMER_SK=[$34], SS_CDEMO_SK=[$35], SS_HDEMO_SK=[$36], SS_ADDR_SK=[$37], SS_STORE_SK=[$38], SS_PROMO_SK=[$39], SS_TICKET_NUMBER=[$40], SS_QUANTITY=[$41], SS_WHOLESALE_COST=[$42], SS_LIST_PRICE=[$43], SS_SALES_PRICE=[$44], SS_EXT_DISCOUNT_AMT=[$45], SS_EXT_SALES_PRICE=[$46], SS_EXT_WHOLESALE_COST=[$47], SS_EXT_LIST_PRICE=[$48], SS_EXT_TAX=[$49], SS_COUPON_AMT=[$50], SS_NET_PAID=[$51], SS_NET_PAID_INC_TAX=[$52], SS_NET_PROFIT=[$53], D_DATE_SK=[$54], D_DATE_ID=[$55], D_DATE=[$56], D_MONTH_SEQ=[$57], D_WEEK_SEQ=[$58], D_QUARTER_SEQ=[$59], D_YEAR=[$60], D_DOW=[$61], D_MOY=[$62], D_DOM=[$63], D_QOY=[$64], D_FY_YEAR=[$65], D_FY_QUARTER_SEQ=[$66], D_FY_WEEK_SEQ=[$67], D_DAY_NAME=[$68], D_QUARTER_NAME=[$69], D_HOLIDAY=[$70], D_WEEKEND=[$71], D_FOLLOWING_HOLIDAY=[$72], D_FIRST_DOM=[$73], D_LAST_DOM=[$74], D_SAME_DAY_LY=[$75], D_SAME_DAY_LQ=[$76], D_CURRENT_DAY=[$77], D_CURRENT_WEEK=[$78], D_CURRENT_MONTH=[$79], D_CURRENT_QUARTER=[$80], D_CURRENT_YEAR=[$81], I_ITEM_SK=[$82], I_ITEM_ID=[$83], I_REC_START_DATE=[$84], I_REC_END_DATE=[$85], I_ITEM_DESC=[$86], I_CURRENT_PRICE=[$87], I_WHOLESALE_COST=[$88], I_BRAND_ID=[$89], I_BRAND=[$90], I_CLASS_ID=[$91], I_CLASS=[$92], I_CATEGORY_ID=[$93], I_CATEGORY=[$94], I_MANUFACT_ID=[$95], I_MANUFACT=[$96], I_SIZE=[$97], I_FORMULATION=[$98], I_COLOR=[$99], I_UNITS=[$100], I_CONTAINER=[$101], I_MANAGER_ID=[$102], I_PRODUCT_NAME=[$103], $f0=[$104], I_CATEGORY0=[CAST($105):CHAR(50)], EXPR$0=[CAST($106):DECIMAL(7, 2)]): rowcount = 3.190781363581952E24, cumulative cost = {3.190781363581952E24 rows, 3.4141360590326886E26 cpu, 0.0 io}, id = 312
            LogicalJoin(subset=[rel#311:RelSubset#18.NONE.[]], condition=[AND(=($94, $105), >($87, *(1.2:DECIMAL(2, 1), $106)))], joinType=[inner]): rowcount = 3.190781363581952E24, cumulative cost = {3.190781363581952E24 rows, 0.0 cpu, 0.0 io}, id = 310
              LogicalProject(subset=[rel#305:RelSubset#15.NONE.[]], CA_ADDRESS_SK=[$0], CA_ADDRESS_ID=[$1], CA_STREET_NUMBER=[$2], CA_STREET_NAME=[$3], CA_STREET_TYPE=[$4], CA_SUITE_NUMBER=[$5], CA_CITY=[$6], CA_COUNTY=[$7], CA_STATE=[$8], CA_ZIP=[$9], CA_COUNTRY=[$10], CA_GMT_OFFSET=[$11], CA_LOCATION_TYPE=[$12], C_CUSTOMER_SK=[$13], C_CUSTOMER_ID=[$14], C_CURRENT_CDEMO_SK=[$15], C_CURRENT_HDEMO_SK=[$16], C_CURRENT_ADDR_SK=[$17], C_FIRST_SHIPTO_DATE_SK=[$18], C_FIRST_SALES_DATE_SK=[$19], C_SALUTATION=[$20], C_FIRST_NAME=[$21], C_LAST_NAME=[$22], C_PREFERRED_CUST_FLAG=[$23], C_BIRTH_DAY=[$24], C_BIRTH_MONTH=[$25], C_BIRTH_YEAR=[$26], C_BIRTH_COUNTRY=[$27], C_LOGIN=[$28], C_EMAIL_ADDRESS=[$29], C_LAST_REVIEW_DATE_SK=[$30], SS_SOLD_DATE_SK=[$31], SS_SOLD_TIME_SK=[$32], SS_ITEM_SK=[$33], SS_CUSTOMER_SK=[$34], SS_CDEMO_SK=[$35], SS_HDEMO_SK=[$36], SS_ADDR_SK=[$37], SS_STORE_SK=[$38], SS_PROMO_SK=[$39], SS_TICKET_NUMBER=[$40], SS_QUANTITY=[$41], SS_WHOLESALE_COST=[$42], SS_LIST_PRICE=[$43], SS_SALES_PRICE=[$44], SS_EXT_DISCOUNT_AMT=[$45], SS_EXT_SALES_PRICE=[$46], SS_EXT_WHOLESALE_COST=[$47], SS_EXT_LIST_PRICE=[$48], SS_EXT_TAX=[$49], SS_COUPON_AMT=[$50], SS_NET_PAID=[$51], SS_NET_PAID_INC_TAX=[$52], SS_NET_PROFIT=[$53], D_DATE_SK=[$54], D_DATE_ID=[$55], D_DATE=[$56], D_MONTH_SEQ=[$57], D_WEEK_SEQ=[$58], D_QUARTER_SEQ=[$59], D_YEAR=[$60], D_DOW=[$61], D_MOY=[$62], D_DOM=[$63], D_QOY=[$64], D_FY_YEAR=[$65], D_FY_QUARTER_SEQ=[$66], D_FY_WEEK_SEQ=[$67], D_DAY_NAME=[$68], D_QUARTER_NAME=[$69], D_HOLIDAY=[$70], D_WEEKEND=[$71], D_FOLLOWING_HOLIDAY=[$72], D_FIRST_DOM=[$73], D_LAST_DOM=[$74], D_SAME_DAY_LY=[$75], D_SAME_DAY_LQ=[$76], D_CURRENT_DAY=[$77], D_CURRENT_WEEK=[$78], D_CURRENT_MONTH=[$79], D_CURRENT_QUARTER=[$80], D_CURRENT_YEAR=[$81], I_ITEM_SK=[$82], I_ITEM_ID=[$83], I_REC_START_DATE=[$84], I_REC_END_DATE=[$85], I_ITEM_DESC=[$86], I_CURRENT_PRICE=[$87], I_WHOLESALE_COST=[$88], I_BRAND_ID=[$89], I_BRAND=[$90], I_CLASS_ID=[$91], I_CLASS=[$92], I_CATEGORY_ID=[$93], I_CATEGORY=[$94], I_MANUFACT_ID=[$95], I_MANUFACT=[$96], I_SIZE=[$97], I_FORMULATION=[$98], I_COLOR=[$99], I_UNITS=[$100], I_CONTAINER=[$101], I_MANAGER_ID=[$102], I_PRODUCT_NAME=[$103], $f0=[CAST($104):INTEGER]): rowcount = 2.363541750801446E22, cumulative cost = {2.363541750801446E22 rows, 2.4817188383415185E24 cpu, 0.0 io}, id = 304
                LogicalJoin(subset=[rel#303:RelSubset#14.NONE.[]], condition=[=($57, $104)], joinType=[inner]): rowcount = 2.363541750801446E22, cumulative cost = {2.363541750801446E22 rows, 0.0 cpu, 0.0 io}, id = 302
                  LogicalJoin(subset=[rel#291:RelSubset#8.NONE.[]], condition=[=($33, $82)], joinType=[inner]): rowcount = 9.586834411205249E21, cumulative cost = {9.586834411205249E21 rows, 0.0 cpu, 0.0 io}, id = 290
                    LogicalJoin(subset=[rel#288:RelSubset#6.NONE.[]], condition=[=($31, $54)], joinType=[inner]): rowcount = 3.5506794115574999E18, cumulative cost = {3.5506794115574999E18 rows, 0.0 cpu, 0.0 io}, id = 287
                      LogicalJoin(subset=[rel#285:RelSubset#4.NONE.[]], condition=[=($13, $34)], joinType=[inner]): rowcount = 3.2404545E14, cumulative cost = {3.2404545E14 rows, 0.0 cpu, 0.0 io}, id = 284
                        LogicalJoin(subset=[rel#282:RelSubset#2.NONE.[]], condition=[=($0, $17)], joinType=[inner]): rowcount = 7.5E8, cumulative cost = {7.5E8 rows, 0.0 cpu, 0.0 io}, id = 281
                          LogicalTableScan(subset=[rel#279:RelSubset#0.NONE.[]], table=[[TPCDS_5, CUSTOMER_ADDRESS]]): rowcount = 50000.0, cumulative cost = {50000.0 rows, 50001.0 cpu, 0.0 io}, id = 38
                          LogicalTableScan(subset=[rel#280:RelSubset#1.NONE.[]], table=[[TPCDS_5, CUSTOMER]]): rowcount = 100000.0, cumulative cost = {100000.0 rows, 100001.0 cpu, 0.0 io}, id = 39
                        LogicalTableScan(subset=[rel#283:RelSubset#3.NONE.[]], table=[[TPCDS_5, STORE_SALES]]): rowcount = 2880404.0, cumulative cost = {2880404.0 rows, 2880405.0 cpu, 0.0 io}, id = 41
                      LogicalTableScan(subset=[rel#286:RelSubset#5.NONE.[]], table=[[TPCDS_5, DATE_DIM]]): rowcount = 73049.0, cumulative cost = {73049.0 rows, 73050.0 cpu, 0.0 io}, id = 43
                    LogicalTableScan(subset=[rel#289:RelSubset#7.NONE.[]], table=[[TPCDS_5, ITEM]]): rowcount = 18000.0, cumulative cost = {18000.0 rows, 18001.0 cpu, 0.0 io}, id = 45
                  LogicalAggregate(subset=[rel#301:RelSubset#13.NONE.[]], group=[{}], agg#0=[SINGLE_VALUE($0)]): rowcount = 16.436025, cumulative cost = {18.490528125 rows, 0.0 cpu, 0.0 io}, id = 300
                    LogicalProject(subset=[rel#299:RelSubset#12.NONE.[]], D_MONTH_SEQ=[$0]): rowcount = 164.36025, cumulative cost = {164.36025 rows, 164.36025 cpu, 0.0 io}, id = 298
                      LogicalAggregate(subset=[rel#297:RelSubset#11.NONE.[]], group=[{0}]): rowcount = 164.36025, cumulative cost = {164.36025 rows, 0.0 cpu, 0.0 io}, id = 296
                        LogicalProject(subset=[rel#295:RelSubset#10.NONE.[]], D_MONTH_SEQ=[$3]): rowcount = 1643.6025, cumulative cost = {1643.6025 rows, 1643.6025 cpu, 0.0 io}, id = 294
                          LogicalFilter(subset=[rel#293:RelSubset#9.NONE.[]], condition=[AND(=($6, 2002), =($8, 3))]): rowcount = 1643.6025, cumulative cost = {1643.6025 rows, 73049.0 cpu, 0.0 io}, id = 292
                            LogicalTableScan(subset=[rel#286:RelSubset#5.NONE.[]], table=[[TPCDS_5, DATE_DIM]]): rowcount = 73049.0, cumulative cost = {73049.0 rows, 73050.0 cpu, 0.0 io}, id = 43
              LogicalAggregate(subset=[rel#309:RelSubset#17.NONE.[]], group=[{0}], EXPR$0=[AVG($1)]): rowcount = 1800.0, cumulative cost = {2025.0 rows, 0.0 cpu, 0.0 io}, id = 308
                LogicalProject(subset=[rel#307:RelSubset#16.NONE.[]], I_CATEGORY=[$12], I_CURRENT_PRICE=[$5]): rowcount = 18000.0, cumulative cost = {18000.0 rows, 36000.0 cpu, 0.0 io}, id = 306
                  LogicalTableScan(subset=[rel#289:RelSubset#7.NONE.[]], table=[[TPCDS_5, ITEM]]): rowcount = 18000.0, cumulative cost = {18000.0 rows, 18001.0 cpu, 0.0 io}, id = 45

Sets:
Set#0, type: RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE)
	rel#279:RelSubset#0.NONE.[], best=null
		rel#38:LogicalTableScan.NONE.[](table=[TPCDS_5, CUSTOMER_ADDRESS]), rowcount=50000.0, cumulative cost={inf}
	rel#327:RelSubset#0.ENUMERABLE.[], best=rel#326
		rel#326:EnumerableTableScan.ENUMERABLE.[](table=[TPCDS_5, CUSTOMER_ADDRESS]), rowcount=50000.0, cumulative cost={50000.0 rows, 50001.0 cpu, 0.0 io}
		rel#333:AbstractConverter.ENUMERABLE.[0](input=RelSubset#327,convention=ENUMERABLE,sort=[0]), rowcount=50000.0, cumulative cost={inf}
	rel#332:RelSubset#0.ENUMERABLE.[0], best=null
		rel#333:AbstractConverter.ENUMERABLE.[0](input=RelSubset#327,convention=ENUMERABLE,sort=[0]), rowcount=50000.0, cumulative cost={inf}
Set#1, type: RecordType(BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK)
	rel#280:RelSubset#1.NONE.[], best=null
		rel#39:LogicalTableScan.NONE.[](table=[TPCDS_5, CUSTOMER]), rowcount=100000.0, cumulative cost={inf}
	rel#329:RelSubset#1.ENUMERABLE.[], best=rel#328
		rel#328:EnumerableTableScan.ENUMERABLE.[](table=[TPCDS_5, CUSTOMER]), rowcount=100000.0, cumulative cost={100000.0 rows, 100001.0 cpu, 0.0 io}
		rel#335:AbstractConverter.ENUMERABLE.[4](input=RelSubset#329,convention=ENUMERABLE,sort=[4]), rowcount=100000.0, cumulative cost={inf}
	rel#334:RelSubset#1.ENUMERABLE.[4], best=null
		rel#335:AbstractConverter.ENUMERABLE.[4](input=RelSubset#329,convention=ENUMERABLE,sort=[4]), rowcount=100000.0, cumulative cost={inf}
Set#2, type: RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK)
	rel#282:RelSubset#2.NONE.[], best=null
		rel#281:LogicalJoin.NONE.[](left=RelSubset#279,right=RelSubset#280,condition==($0, $17),joinType=inner), rowcount=7.5E8, cumulative cost={inf}
	rel#331:RelSubset#2.ENUMERABLE.[], best=rel#330
		rel#330:EnumerableHashJoin.ENUMERABLE.[](left=RelSubset#327,right=RelSubset#329,condition==($0, $17),joinType=inner), rowcount=7.5E8, cumulative cost={7.507909899142206E8 rows, 150002.0 cpu, 0.0 io}
		rel#336:EnumerableMergeJoin.ENUMERABLE.[[0], [17]](left=RelSubset#332,right=RelSubset#334,condition==($0, $17),joinType=inner), rowcount=7.5E8, cumulative cost={inf}
		rel#342:AbstractConverter.ENUMERABLE.[13](input=RelSubset#331,convention=ENUMERABLE,sort=[13]), rowcount=7.5E8, cumulative cost={inf}
	rel#341:RelSubset#2.ENUMERABLE.[13], best=null
		rel#342:AbstractConverter.ENUMERABLE.[13](input=RelSubset#331,convention=ENUMERABLE,sort=[13]), rowcount=7.5E8, cumulative cost={inf}
Set#3, type: RecordType(BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT)
	rel#283:RelSubset#3.NONE.[], best=null
		rel#41:LogicalTableScan.NONE.[](table=[TPCDS_5, STORE_SALES]), rowcount=2880404.0, cumulative cost={inf}
	rel#338:RelSubset#3.ENUMERABLE.[], best=rel#337
		rel#337:EnumerableTableScan.ENUMERABLE.[](table=[TPCDS_5, STORE_SALES]), rowcount=2880404.0, cumulative cost={2880404.0 rows, 2880405.0 cpu, 0.0 io}
		rel#344:AbstractConverter.ENUMERABLE.[3](input=RelSubset#338,convention=ENUMERABLE,sort=[3]), rowcount=2880404.0, cumulative cost={inf}
	rel#343:RelSubset#3.ENUMERABLE.[3], best=null
		rel#344:AbstractConverter.ENUMERABLE.[3](input=RelSubset#338,convention=ENUMERABLE,sort=[3]), rowcount=2880404.0, cumulative cost={inf}
Set#4, type: RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT)
	rel#285:RelSubset#4.NONE.[], best=null
		rel#284:LogicalJoin.NONE.[](left=RelSubset#282,right=RelSubset#283,condition==($13, $34),joinType=inner), rowcount=3.2404545E14, cumulative cost={inf}
	rel#340:RelSubset#4.ENUMERABLE.[], best=rel#339
		rel#339:EnumerableHashJoin.ENUMERABLE.[](left=RelSubset#331,right=RelSubset#338,condition==($13, $34),joinType=inner), rowcount=3.2404545E14, cumulative cost={3.240615332396213E14 rows, 3030407.0 cpu, 0.0 io}
		rel#345:EnumerableMergeJoin.ENUMERABLE.[[13], [34]](left=RelSubset#341,right=RelSubset#343,condition==($13, $34),joinType=inner), rowcount=3.2404545E14, cumulative cost={inf}
		rel#351:AbstractConverter.ENUMERABLE.[31](input=RelSubset#340,convention=ENUMERABLE,sort=[31]), rowcount=3.2404545E14, cumulative cost={inf}
	rel#350:RelSubset#4.ENUMERABLE.[31], best=null
		rel#351:AbstractConverter.ENUMERABLE.[31](input=RelSubset#340,convention=ENUMERABLE,sort=[31]), rowcount=3.2404545E14, cumulative cost={inf}
Set#5, type: RecordType(BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR)
	rel#286:RelSubset#5.NONE.[], best=null
		rel#43:LogicalTableScan.NONE.[](table=[TPCDS_5, DATE_DIM]), rowcount=73049.0, cumulative cost={inf}
	rel#347:RelSubset#5.ENUMERABLE.[], best=rel#346
		rel#346:EnumerableTableScan.ENUMERABLE.[](table=[TPCDS_5, DATE_DIM]), rowcount=73049.0, cumulative cost={73049.0 rows, 73050.0 cpu, 0.0 io}
		rel#353:AbstractConverter.ENUMERABLE.[0](input=RelSubset#347,convention=ENUMERABLE,sort=[0]), rowcount=73049.0, cumulative cost={inf}
	rel#352:RelSubset#5.ENUMERABLE.[0], best=null
		rel#353:AbstractConverter.ENUMERABLE.[0](input=RelSubset#347,convention=ENUMERABLE,sort=[0]), rowcount=73049.0, cumulative cost={inf}
Set#6, type: RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR)
	rel#288:RelSubset#6.NONE.[], best=null
		rel#287:LogicalJoin.NONE.[](left=RelSubset#285,right=RelSubset#286,condition==($31, $54),joinType=inner), rowcount=3.5506794115574999E18, cumulative cost={inf}
	rel#349:RelSubset#6.ENUMERABLE.[], best=rel#348
		rel#348:EnumerableHashJoin.ENUMERABLE.[](left=RelSubset#340,right=RelSubset#347,condition==($31, $54),joinType=inner), rowcount=3.5506794115574999E18, cumulative cost={3.5618304488494541E18 rows, 3103457.0 cpu, 0.0 io}
		rel#354:EnumerableMergeJoin.ENUMERABLE.[[31], [54]](left=RelSubset#350,right=RelSubset#352,condition==($31, $54),joinType=inner), rowcount=3.5506794115574999E18, cumulative cost={inf}
		rel#360:AbstractConverter.ENUMERABLE.[33](input=RelSubset#349,convention=ENUMERABLE,sort=[33]), rowcount=3.5506794115574999E18, cumulative cost={inf}
	rel#359:RelSubset#6.ENUMERABLE.[33], best=null
		rel#360:AbstractConverter.ENUMERABLE.[33](input=RelSubset#349,convention=ENUMERABLE,sort=[33]), rowcount=3.5506794115574999E18, cumulative cost={inf}
Set#7, type: RecordType(BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME)
	rel#289:RelSubset#7.NONE.[], best=null
		rel#45:LogicalTableScan.NONE.[](table=[TPCDS_5, ITEM]), rowcount=18000.0, cumulative cost={inf}
	rel#356:RelSubset#7.ENUMERABLE.[], best=rel#355
		rel#355:EnumerableTableScan.ENUMERABLE.[](table=[TPCDS_5, ITEM]), rowcount=18000.0, cumulative cost={18000.0 rows, 18001.0 cpu, 0.0 io}
		rel#362:AbstractConverter.ENUMERABLE.[0](input=RelSubset#356,convention=ENUMERABLE,sort=[0]), rowcount=18000.0, cumulative cost={inf}
	rel#361:RelSubset#7.ENUMERABLE.[0], best=null
		rel#362:AbstractConverter.ENUMERABLE.[0](input=RelSubset#356,convention=ENUMERABLE,sort=[0]), rowcount=18000.0, cumulative cost={inf}
Set#8, type: RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR, BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME)
	rel#291:RelSubset#8.NONE.[], best=null
		rel#290:LogicalJoin.NONE.[](left=RelSubset#288,right=RelSubset#289,condition==($33, $82),joinType=inner), rowcount=9.586834411205249E21, cumulative cost={inf}
	rel#358:RelSubset#8.ENUMERABLE.[], best=rel#357
		rel#357:EnumerableHashJoin.ENUMERABLE.[](left=RelSubset#349,right=RelSubset#356,condition==($33, $82),joinType=inner), rowcount=9.586834411205249E21, cumulative cost={9.742058792596848E21 rows, 3121458.0 cpu, 0.0 io}
		rel#363:EnumerableMergeJoin.ENUMERABLE.[[33], [82]](left=RelSubset#359,right=RelSubset#361,condition==($33, $82),joinType=inner), rowcount=9.586834411205249E21, cumulative cost={inf}
		rel#377:AbstractConverter.ENUMERABLE.[57](input=RelSubset#358,convention=ENUMERABLE,sort=[57]), rowcount=9.586834411205249E21, cumulative cost={inf}
	rel#376:RelSubset#8.ENUMERABLE.[57], best=null
		rel#377:AbstractConverter.ENUMERABLE.[57](input=RelSubset#358,convention=ENUMERABLE,sort=[57]), rowcount=9.586834411205249E21, cumulative cost={inf}
Set#9, type: RecordType(BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR)
	rel#293:RelSubset#9.NONE.[], best=null
		rel#292:LogicalFilter.NONE.[](input=RelSubset#286,condition=AND(=($6, 2002), =($8, 3))), rowcount=1643.6025, cumulative cost={inf}
	rel#365:RelSubset#9.ENUMERABLE.[], best=rel#364
		rel#364:EnumerableFilter.ENUMERABLE.[](input=RelSubset#347,condition=AND(=($6, 2002), =($8, 3))), rowcount=1643.6025, cumulative cost={74692.6025 rows, 146099.0 cpu, 0.0 io}
Set#10, type: RecordType(INTEGER D_MONTH_SEQ)
	rel#295:RelSubset#10.NONE.[], best=null
		rel#294:LogicalProject.NONE.[](input=RelSubset#293,exprs=[$3]), rowcount=1643.6025, cumulative cost={inf}
	rel#367:RelSubset#10.ENUMERABLE.[], best=rel#366
		rel#366:EnumerableProject.ENUMERABLE.[](input=RelSubset#365,exprs=[$3]), rowcount=1643.6025, cumulative cost={76336.20499999999 rows, 147742.6025 cpu, 0.0 io}
Set#11, type: RecordType(INTEGER D_MONTH_SEQ)
	rel#297:RelSubset#11.NONE.[], best=null
		rel#296:LogicalAggregate.NONE.[](input=RelSubset#295,group={0}), rowcount=164.36025, cumulative cost={inf}
	rel#369:RelSubset#11.ENUMERABLE.[], best=rel#368
		rel#368:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#367,group={0}), rowcount=164.36025, cumulative cost={76500.56524999999 rows, 147742.6025 cpu, 0.0 io}
Set#12, type: RecordType(INTEGER D_MONTH_SEQ)
	rel#299:RelSubset#12.NONE.[], best=null
		rel#298:LogicalProject.NONE.[](input=RelSubset#297,inputs=0), rowcount=164.36025, cumulative cost={inf}
	rel#371:RelSubset#12.ENUMERABLE.[], best=rel#370
		rel#370:EnumerableProject.ENUMERABLE.[](input=RelSubset#369,inputs=0), rowcount=164.36025, cumulative cost={76664.92549999998 rows, 147906.96275 cpu, 0.0 io}
Set#13, type: RecordType(INTEGER $f0)
	rel#301:RelSubset#13.NONE.[], best=null
		rel#300:LogicalAggregate.NONE.[](input=RelSubset#299,group={},agg#0=SINGLE_VALUE($0)), rowcount=16.436025, cumulative cost={inf}
	rel#373:RelSubset#13.ENUMERABLE.[], best=rel#372
		rel#372:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#371,group={},agg#0=SINGLE_VALUE($0)), rowcount=1.0, cumulative cost={76666.05049999998 rows, 147906.96275 cpu, 0.0 io}
		rel#379:AbstractConverter.ENUMERABLE.[0](input=RelSubset#373,convention=ENUMERABLE,sort=[0]), rowcount=1.0, cumulative cost={inf}
	rel#378:RelSubset#13.ENUMERABLE.[0], best=null
		rel#379:AbstractConverter.ENUMERABLE.[0](input=RelSubset#373,convention=ENUMERABLE,sort=[0]), rowcount=1.0, cumulative cost={inf}
Set#14, type: RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR, BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME, INTEGER $f0)
	rel#303:RelSubset#14.NONE.[], best=null
		rel#302:LogicalJoin.NONE.[](left=RelSubset#291,right=RelSubset#301,condition==($57, $104),joinType=inner), rowcount=2.363541750801446E22, cumulative cost={inf}
	rel#375:RelSubset#14.ENUMERABLE.[], best=rel#374
		rel#374:EnumerableHashJoin.ENUMERABLE.[](left=RelSubset#358,right=RelSubset#373,condition==($57, $104),joinType=inner), rowcount=1.4380251616807873E21, cumulative cost={4.964146177889163E23 rows, 3269364.96275 cpu, 0.0 io}
		rel#380:EnumerableMergeJoin.ENUMERABLE.[[57], [104]](left=RelSubset#376,right=RelSubset#378,condition==($57, $104),joinType=inner), rowcount=2.363541750801446E22, cumulative cost={inf}
Set#15, type: RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR, BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME, INTEGER $f0)
	rel#305:RelSubset#15.NONE.[], best=null
		rel#304:LogicalProject.NONE.[](input=RelSubset#303,inputs=0..103,exprs=[CAST($104):INTEGER]), rowcount=2.363541750801446E22, cumulative cost={inf}
	rel#382:RelSubset#15.ENUMERABLE.[], best=rel#381
		rel#381:EnumerableProject.ENUMERABLE.[](input=RelSubset#375,inputs=0..103,exprs=[CAST($104):INTEGER]), rowcount=1.4380251616807873E21, cumulative cost={4.978526429505971E23 rows, 1.5099264197648267E23 cpu, 0.0 io}
		rel#390:AbstractConverter.ENUMERABLE.[94](input=RelSubset#382,convention=ENUMERABLE,sort=[94]), rowcount=1.4380251616807873E21, cumulative cost={inf}
	rel#389:RelSubset#15.ENUMERABLE.[94], best=null
		rel#390:AbstractConverter.ENUMERABLE.[94](input=RelSubset#382,convention=ENUMERABLE,sort=[94]), rowcount=1.4380251616807873E21, cumulative cost={inf}
Set#16, type: RecordType(CHAR(50) I_CATEGORY, DECIMAL(7, 2) I_CURRENT_PRICE)
	rel#307:RelSubset#16.NONE.[], best=null
		rel#306:LogicalProject.NONE.[](input=RelSubset#289,exprs=[$12, $5]), rowcount=18000.0, cumulative cost={inf}
	rel#384:RelSubset#16.ENUMERABLE.[], best=rel#383
		rel#383:EnumerableProject.ENUMERABLE.[](input=RelSubset#356,exprs=[$12, $5]), rowcount=18000.0, cumulative cost={36000.0 rows, 54001.0 cpu, 0.0 io}
Set#17, type: RecordType(CHAR(50) I_CATEGORY, DECIMAL(7, 2) EXPR$0)
	rel#309:RelSubset#17.NONE.[], best=null
		rel#308:LogicalAggregate.NONE.[](input=RelSubset#307,group={0},EXPR$0=AVG($1)), rowcount=1800.0, cumulative cost={inf}
	rel#386:RelSubset#17.ENUMERABLE.[], best=null
	rel#391:RelSubset#17.ENUMERABLE.[0], best=null
Set#18, type: RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR, BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME, INTEGER $f0, CHAR(50) I_CATEGORY0, DECIMAL(7, 2) EXPR$0)
	rel#311:RelSubset#18.NONE.[], best=null
		rel#310:LogicalJoin.NONE.[](left=RelSubset#305,right=RelSubset#309,condition=AND(=($94, $105), >($87, *(1.2:DECIMAL(2, 1), $106))),joinType=inner), rowcount=3.190781363581952E24, cumulative cost={inf}
	rel#388:RelSubset#18.ENUMERABLE.[], best=null
		rel#387:EnumerableHashJoin.ENUMERABLE.[](left=RelSubset#382,right=RelSubset#386,condition=AND(=($94, $105), >($87, *(1.2:DECIMAL(2, 1), $106))),joinType=inner), rowcount=1.9413339682690627E23, cumulative cost={inf}
		rel#392:EnumerableMergeJoin.ENUMERABLE.[[94], [105]](left=RelSubset#389,right=RelSubset#391,condition=AND(=($94, $105), >($87, *(1.2:DECIMAL(2, 1), $106))),joinType=inner), rowcount=3.190781363581952E24, cumulative cost={inf}
Set#19, type: RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR, BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME, INTEGER $f0, CHAR(50) I_CATEGORY0, DECIMAL(7, 2) EXPR$0)
	rel#313:RelSubset#19.NONE.[], best=null
		rel#312:LogicalProject.NONE.[](input=RelSubset#311,inputs=0..104,exprs=[CAST($105):CHAR(50), CAST($106):DECIMAL(7, 2)]), rowcount=3.190781363581952E24, cumulative cost={inf}
	rel#394:RelSubset#19.ENUMERABLE.[], best=null
		rel#393:EnumerableProject.ENUMERABLE.[](input=RelSubset#388,inputs=0..104,exprs=[CAST($105):CHAR(50), CAST($106):DECIMAL(7, 2)]), rowcount=3.190781363581952E24, cumulative cost={inf}
Set#20, type: RecordType(CHAR(2) CA_STATE)
	rel#315:RelSubset#20.NONE.[], best=null
		rel#314:LogicalProject.NONE.[](input=RelSubset#313,exprs=[$8]), rowcount=3.190781363581952E24, cumulative cost={inf}
	rel#396:RelSubset#20.ENUMERABLE.[], best=null
		rel#395:EnumerableProject.ENUMERABLE.[](input=RelSubset#394,exprs=[$8]), rowcount=3.190781363581952E24, cumulative cost={inf}
Set#21, type: RecordType(CHAR(2) CA_STATE, BIGINT CNT)
	rel#317:RelSubset#21.NONE.[], best=null
		rel#316:LogicalAggregate.NONE.[](input=RelSubset#315,group={0},CNT=COUNT()), rowcount=3.1907813635819525E23, cumulative cost={inf}
	rel#398:RelSubset#21.ENUMERABLE.[], best=null
		rel#397:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#396,group={0},CNT=COUNT()), rowcount=3.1907813635819525E23, cumulative cost={inf}
Set#22, type: RecordType(CHAR(2) CA_STATE, BIGINT CNT)
	rel#319:RelSubset#22.NONE.[], best=null
		rel#318:LogicalFilter.NONE.[](input=RelSubset#317,condition=>=($1, 10)), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#406:LogicalSort.NONE.[1, 0](input=RelSubset#319,sort0=$1,sort1=$0,dir0=ASC,dir1=ASC), rowcount=1.5953906817909763E23, cumulative cost={inf}
	rel#400:RelSubset#22.ENUMERABLE.[], best=null
		rel#399:EnumerableFilter.ENUMERABLE.[](input=RelSubset#398,condition=>=($1, 10)), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#413:AbstractConverter.ENUMERABLE.[1, 0](input=RelSubset#400,convention=ENUMERABLE,sort=[1, 0]), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#411:EnumerableSort.ENUMERABLE.[1, 0](input=RelSubset#400,sort0=$1,sort1=$0,dir0=ASC,dir1=ASC), rowcount=1.5953906817909763E23, cumulative cost={inf}
	rel#408:RelSubset#22.NONE.[1, 0], best=null
		rel#406:LogicalSort.NONE.[1, 0](input=RelSubset#319,sort0=$1,sort1=$0,dir0=ASC,dir1=ASC), rowcount=1.5953906817909763E23, cumulative cost={inf}
	rel#412:RelSubset#22.ENUMERABLE.[1, 0], best=null
		rel#413:AbstractConverter.ENUMERABLE.[1, 0](input=RelSubset#400,convention=ENUMERABLE,sort=[1, 0]), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#411:EnumerableSort.ENUMERABLE.[1, 0](input=RelSubset#400,sort0=$1,sort1=$0,dir0=ASC,dir1=ASC), rowcount=1.5953906817909763E23, cumulative cost={inf}
Set#23, type: RecordType(BIGINT CNT, CHAR(2) CA_STATE)
	rel#321:RelSubset#23.NONE.[], best=null
		rel#320:LogicalProject.NONE.[](input=RelSubset#319,exprs=[$1, $0]), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#322:LogicalSort.NONE.[0, 1](input=RelSubset#321,sort0=$0,sort1=$1,dir0=ASC,dir1=ASC), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#409:LogicalProject.NONE.[0, 1](input=RelSubset#408,exprs=[$1, $0]), rowcount=1.5953906817909763E23, cumulative cost={inf}
	rel#402:RelSubset#23.ENUMERABLE.[], best=null
		rel#401:EnumerableProject.ENUMERABLE.[](input=RelSubset#400,exprs=[$1, $0]), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#405:AbstractConverter.ENUMERABLE.[0, 1](input=RelSubset#402,convention=ENUMERABLE,sort=[0, 1]), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#325:AbstractConverter.ENUMERABLE.[0, 1](input=RelSubset#403,convention=ENUMERABLE,sort=[0, 1]), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#410:EnumerableSort.ENUMERABLE.[0, 1](input=RelSubset#402,sort0=$0,sort1=$1,dir0=ASC,dir1=ASC), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#414:EnumerableProject.ENUMERABLE.[0, 1](input=RelSubset#412,exprs=[$1, $0]), rowcount=1.5953906817909763E23, cumulative cost={inf}
	rel#403:RelSubset#23.NONE.[0, 1], best=null
		rel#322:LogicalSort.NONE.[0, 1](input=RelSubset#321,sort0=$0,sort1=$1,dir0=ASC,dir1=ASC), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#409:LogicalProject.NONE.[0, 1](input=RelSubset#408,exprs=[$1, $0]), rowcount=1.5953906817909763E23, cumulative cost={inf}
	rel#404:RelSubset#23.ENUMERABLE.[0, 1], best=null
		rel#405:AbstractConverter.ENUMERABLE.[0, 1](input=RelSubset#402,convention=ENUMERABLE,sort=[0, 1]), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#325:AbstractConverter.ENUMERABLE.[0, 1](input=RelSubset#403,convention=ENUMERABLE,sort=[0, 1]), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#410:EnumerableSort.ENUMERABLE.[0, 1](input=RelSubset#402,sort0=$0,sort1=$1,dir0=ASC,dir1=ASC), rowcount=1.5953906817909763E23, cumulative cost={inf}
		rel#414:EnumerableProject.ENUMERABLE.[0, 1](input=RelSubset#412,exprs=[$1, $0]), rowcount=1.5953906817909763E23, cumulative cost={inf}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE)";
		rel38 [label="rel#38:LogicalTableScan\ntable=[TPCDS_5, CUSTOMER_ADDRESS]\nrows=50000.0, cost={inf}",shape=box]
		rel326 [label="rel#326:EnumerableTableScan\ntable=[TPCDS_5, CUSTOMER_ADDRESS]\nrows=50000.0, cost={50000.0 rows, 50001.0 cpu, 0.0 io}",color=blue,shape=box]
		rel333 [label="rel#333:AbstractConverter\ninput=RelSubset#327,convention=ENUMERABLE,sort=[0]\nrows=50000.0, cost={inf}",shape=box]
		subset279 [label="rel#279:RelSubset#0.NONE.[]"]
		subset327 [label="rel#327:RelSubset#0.ENUMERABLE.[]"]
		subset332 [label="rel#332:RelSubset#0.ENUMERABLE.[0]",color=red]
		subset327 -> subset332;	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK)";
		rel39 [label="rel#39:LogicalTableScan\ntable=[TPCDS_5, CUSTOMER]\nrows=100000.0, cost={inf}",shape=box]
		rel328 [label="rel#328:EnumerableTableScan\ntable=[TPCDS_5, CUSTOMER]\nrows=100000.0, cost={100000.0 rows, 100001.0 cpu, 0.0 io}",color=blue,shape=box]
		rel335 [label="rel#335:AbstractConverter\ninput=RelSubset#329,convention=ENUMERABLE,sort=[4]\nrows=100000.0, cost={inf}",shape=box]
		subset280 [label="rel#280:RelSubset#1.NONE.[]"]
		subset329 [label="rel#329:RelSubset#1.ENUMERABLE.[]"]
		subset334 [label="rel#334:RelSubset#1.ENUMERABLE.[4]",color=red]
		subset329 -> subset334;	}
	subgraph cluster2{
		label="Set 2 RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK)";
		rel281 [label="rel#281:LogicalJoin\nleft=RelSubset#279,right=RelSubset#280,condition==($0, $17),joinType=inner\nrows=7.5E8, cost={inf}",shape=box]
		rel330 [label="rel#330:EnumerableHashJoin\nleft=RelSubset#327,right=RelSubset#329,condition==($0, $17),joinType=inner\nrows=7.5E8, cost={7.507909899142206E8 rows, 150002.0 cpu, 0.0 io}",color=blue,shape=box]
		rel336 [label="rel#336:EnumerableMergeJoin.ENUMERABLE.[[0], [17]]\nleft=RelSubset#332,right=RelSubset#334,condition==($0, $17),joinType=inner\nrows=7.5E8, cost={inf}",shape=box]
		rel342 [label="rel#342:AbstractConverter\ninput=RelSubset#331,convention=ENUMERABLE,sort=[13]\nrows=7.5E8, cost={inf}",shape=box]
		subset282 [label="rel#282:RelSubset#2.NONE.[]"]
		subset331 [label="rel#331:RelSubset#2.ENUMERABLE.[]"]
		subset341 [label="rel#341:RelSubset#2.ENUMERABLE.[13]",color=red]
		subset331 -> subset341;	}
	subgraph cluster3{
		label="Set 3 RecordType(BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT)";
		rel41 [label="rel#41:LogicalTableScan\ntable=[TPCDS_5, STORE_SALES]\nrows=2880404.0, cost={inf}",shape=box]
		rel337 [label="rel#337:EnumerableTableScan\ntable=[TPCDS_5, STORE_SALES]\nrows=2880404.0, cost={2880404.0 rows, 2880405.0 cpu, 0.0 io}",color=blue,shape=box]
		rel344 [label="rel#344:AbstractConverter\ninput=RelSubset#338,convention=ENUMERABLE,sort=[3]\nrows=2880404.0, cost={inf}",shape=box]
		subset283 [label="rel#283:RelSubset#3.NONE.[]"]
		subset338 [label="rel#338:RelSubset#3.ENUMERABLE.[]"]
		subset343 [label="rel#343:RelSubset#3.ENUMERABLE.[3]",color=red]
		subset338 -> subset343;	}
	subgraph cluster4{
		label="Set 4 RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT)";
		rel284 [label="rel#284:LogicalJoin\nleft=RelSubset#282,right=RelSubset#283,condition==($13, $34),joinType=inner\nrows=3.2404545E14, cost={inf}",shape=box]
		rel339 [label="rel#339:EnumerableHashJoin\nleft=RelSubset#331,right=RelSubset#338,condition==($13, $34),joinType=inner\nrows=3.2404545E14, cost={3.240615332396213E14 rows, 3030407.0 cpu, 0.0 io}",color=blue,shape=box]
		rel345 [label="rel#345:EnumerableMergeJoin.ENUMERABLE.[[13], [34]]\nleft=RelSubset#341,right=RelSubset#343,condition==($13, $34),joinType=inner\nrows=3.2404545E14, cost={inf}",shape=box]
		rel351 [label="rel#351:AbstractConverter\ninput=RelSubset#340,convention=ENUMERABLE,sort=[31]\nrows=3.2404545E14, cost={inf}",shape=box]
		subset285 [label="rel#285:RelSubset#4.NONE.[]"]
		subset340 [label="rel#340:RelSubset#4.ENUMERABLE.[]"]
		subset350 [label="rel#350:RelSubset#4.ENUMERABLE.[31]",color=red]
		subset340 -> subset350;	}
	subgraph cluster5{
		label="Set 5 RecordType(BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR)";
		rel43 [label="rel#43:LogicalTableScan\ntable=[TPCDS_5, DATE_DIM]\nrows=73049.0, cost={inf}",shape=box]
		rel346 [label="rel#346:EnumerableTableScan\ntable=[TPCDS_5, DATE_DIM]\nrows=73049.0, cost={73049.0 rows, 73050.0 cpu, 0.0 io}",color=blue,shape=box]
		rel353 [label="rel#353:AbstractConverter\ninput=RelSubset#347,convention=ENUMERABLE,sort=[0]\nrows=73049.0, cost={inf}",shape=box]
		subset286 [label="rel#286:RelSubset#5.NONE.[]"]
		subset347 [label="rel#347:RelSubset#5.ENUMERABLE.[]"]
		subset352 [label="rel#352:RelSubset#5.ENUMERABLE.[0]",color=red]
		subset347 -> subset352;	}
	subgraph cluster6{
		label="Set 6 RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR)";
		rel287 [label="rel#287:LogicalJoin\nleft=RelSubset#285,right=RelSubset#286,condition==($31, $54),joinType=inner\nrows=3.5506794115574999E18, cost={inf}",shape=box]
		rel348 [label="rel#348:EnumerableHashJoin\nleft=RelSubset#340,right=RelSubset#347,condition==($31, $54),joinType=inner\nrows=3.5506794115574999E18, cost={3.5618304488494541E18 rows, 3103457.0 cpu, 0.0 io}",color=blue,shape=box]
		rel354 [label="rel#354:EnumerableMergeJoin.ENUMERABLE.[[31], [54]]\nleft=RelSubset#350,right=RelSubset#352,condition==($31, $54),joinType=inner\nrows=3.5506794115574999E18, cost={inf}",shape=box]
		rel360 [label="rel#360:AbstractConverter\ninput=RelSubset#349,convention=ENUMERABLE,sort=[33]\nrows=3.5506794115574999E18, cost={inf}",shape=box]
		subset288 [label="rel#288:RelSubset#6.NONE.[]"]
		subset349 [label="rel#349:RelSubset#6.ENUMERABLE.[]"]
		subset359 [label="rel#359:RelSubset#6.ENUMERABLE.[33]",color=red]
		subset349 -> subset359;	}
	subgraph cluster7{
		label="Set 7 RecordType(BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME)";
		rel45 [label="rel#45:LogicalTableScan\ntable=[TPCDS_5, ITEM]\nrows=18000.0, cost={inf}",shape=box]
		rel355 [label="rel#355:EnumerableTableScan\ntable=[TPCDS_5, ITEM]\nrows=18000.0, cost={18000.0 rows, 18001.0 cpu, 0.0 io}",color=blue,shape=box]
		rel362 [label="rel#362:AbstractConverter\ninput=RelSubset#356,convention=ENUMERABLE,sort=[0]\nrows=18000.0, cost={inf}",shape=box]
		subset289 [label="rel#289:RelSubset#7.NONE.[]"]
		subset356 [label="rel#356:RelSubset#7.ENUMERABLE.[]"]
		subset361 [label="rel#361:RelSubset#7.ENUMERABLE.[0]",color=red]
		subset356 -> subset361;	}
	subgraph cluster8{
		label="Set 8 RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR, BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME)";
		rel290 [label="rel#290:LogicalJoin\nleft=RelSubset#288,right=RelSubset#289,condition==($33, $82),joinType=inner\nrows=9.586834411205249E21, cost={inf}",shape=box]
		rel357 [label="rel#357:EnumerableHashJoin\nleft=RelSubset#349,right=RelSubset#356,condition==($33, $82),joinType=inner\nrows=9.586834411205249E21, cost={9.742058792596848E21 rows, 3121458.0 cpu, 0.0 io}",color=blue,shape=box]
		rel363 [label="rel#363:EnumerableMergeJoin.ENUMERABLE.[[33], [82]]\nleft=RelSubset#359,right=RelSubset#361,condition==($33, $82),joinType=inner\nrows=9.586834411205249E21, cost={inf}",shape=box]
		rel377 [label="rel#377:AbstractConverter\ninput=RelSubset#358,convention=ENUMERABLE,sort=[57]\nrows=9.586834411205249E21, cost={inf}",shape=box]
		subset291 [label="rel#291:RelSubset#8.NONE.[]"]
		subset358 [label="rel#358:RelSubset#8.ENUMERABLE.[]"]
		subset376 [label="rel#376:RelSubset#8.ENUMERABLE.[57]",color=red]
		subset358 -> subset376;	}
	subgraph cluster9{
		label="Set 9 RecordType(BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR)";
		rel292 [label="rel#292:LogicalFilter\ninput=RelSubset#286,condition=AND(=($6, 2002), =($8, 3))\nrows=1643.6025, cost={inf}",shape=box]
		rel364 [label="rel#364:EnumerableFilter\ninput=RelSubset#347,condition=AND(=($6, 2002), =($8, 3))\nrows=1643.6025, cost={74692.6025 rows, 146099.0 cpu, 0.0 io}",color=blue,shape=box]
		subset293 [label="rel#293:RelSubset#9.NONE.[]"]
		subset365 [label="rel#365:RelSubset#9.ENUMERABLE.[]"]
	}
	subgraph cluster10{
		label="Set 10 RecordType(INTEGER D_MONTH_SEQ)";
		rel294 [label="rel#294:LogicalProject\ninput=RelSubset#293,exprs=[$3]\nrows=1643.6025, cost={inf}",shape=box]
		rel366 [label="rel#366:EnumerableProject\ninput=RelSubset#365,exprs=[$3]\nrows=1643.6025, cost={76336.20499999999 rows, 147742.6025 cpu, 0.0 io}",color=blue,shape=box]
		subset295 [label="rel#295:RelSubset#10.NONE.[]"]
		subset367 [label="rel#367:RelSubset#10.ENUMERABLE.[]"]
	}
	subgraph cluster11{
		label="Set 11 RecordType(INTEGER D_MONTH_SEQ)";
		rel296 [label="rel#296:LogicalAggregate\ninput=RelSubset#295,group={0}\nrows=164.36025, cost={inf}",shape=box]
		rel368 [label="rel#368:EnumerableAggregate\ninput=RelSubset#367,group={0}\nrows=164.36025, cost={76500.56524999999 rows, 147742.6025 cpu, 0.0 io}",color=blue,shape=box]
		subset297 [label="rel#297:RelSubset#11.NONE.[]"]
		subset369 [label="rel#369:RelSubset#11.ENUMERABLE.[]"]
	}
	subgraph cluster12{
		label="Set 12 RecordType(INTEGER D_MONTH_SEQ)";
		rel298 [label="rel#298:LogicalProject\ninput=RelSubset#297,inputs=0\nrows=164.36025, cost={inf}",shape=box]
		rel370 [label="rel#370:EnumerableProject\ninput=RelSubset#369,inputs=0\nrows=164.36025, cost={76664.92549999998 rows, 147906.96275 cpu, 0.0 io}",color=blue,shape=box]
		subset299 [label="rel#299:RelSubset#12.NONE.[]"]
		subset371 [label="rel#371:RelSubset#12.ENUMERABLE.[]"]
	}
	subgraph cluster13{
		label="Set 13 RecordType(INTEGER $f0)";
		rel300 [label="rel#300:LogicalAggregate\ninput=RelSubset#299,group={},agg#0=SINGLE_VALUE($0)\nrows=16.436025, cost={inf}",shape=box]
		rel372 [label="rel#372:EnumerableAggregate\ninput=RelSubset#371,group={},agg#0=SINGLE_VALUE($0)\nrows=1.0, cost={76666.05049999998 rows, 147906.96275 cpu, 0.0 io}",color=blue,shape=box]
		rel379 [label="rel#379:AbstractConverter\ninput=RelSubset#373,convention=ENUMERABLE,sort=[0]\nrows=1.0, cost={inf}",shape=box]
		subset301 [label="rel#301:RelSubset#13.NONE.[]"]
		subset373 [label="rel#373:RelSubset#13.ENUMERABLE.[]"]
		subset378 [label="rel#378:RelSubset#13.ENUMERABLE.[0]",color=red]
		subset373 -> subset378;	}
	subgraph cluster14{
		label="Set 14 RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR, BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME, INTEGER $f0)";
		rel302 [label="rel#302:LogicalJoin\nleft=RelSubset#291,right=RelSubset#301,condition==($57, $104),joinType=inner\nrows=2.363541750801446E22, cost={inf}",shape=box]
		rel374 [label="rel#374:EnumerableHashJoin\nleft=RelSubset#358,right=RelSubset#373,condition==($57, $104),joinType=inner\nrows=1.4380251616807873E21, cost={4.964146177889163E23 rows, 3269364.96275 cpu, 0.0 io}",color=blue,shape=box]
		rel380 [label="rel#380:EnumerableMergeJoin.ENUMERABLE.[[57], [104]]\nleft=RelSubset#376,right=RelSubset#378,condition==($57, $104),joinType=inner\nrows=2.363541750801446E22, cost={inf}",shape=box]
		subset303 [label="rel#303:RelSubset#14.NONE.[]"]
		subset375 [label="rel#375:RelSubset#14.ENUMERABLE.[]"]
	}
	subgraph cluster15{
		label="Set 15 RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR, BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME, INTEGER $f0)";
		rel304 [label="rel#304:LogicalProject\ninput=RelSubset#303,inputs=0..103,exprs=[CAST($104):INTEGER]\nrows=2.363541750801446E22, cost={inf}",shape=box]
		rel381 [label="rel#381:EnumerableProject\ninput=RelSubset#375,inputs=0..103,exprs=[CAST($104):INTEGER]\nrows=1.4380251616807873E21, cost={4.978526429505971E23 rows, 1.5099264197648267E23 cpu, 0.0 io}",color=blue,shape=box]
		rel390 [label="rel#390:AbstractConverter\ninput=RelSubset#382,convention=ENUMERABLE,sort=[94]\nrows=1.4380251616807873E21, cost={inf}",shape=box]
		subset305 [label="rel#305:RelSubset#15.NONE.[]"]
		subset382 [label="rel#382:RelSubset#15.ENUMERABLE.[]"]
		subset389 [label="rel#389:RelSubset#15.ENUMERABLE.[94]",color=red]
		subset382 -> subset389;	}
	subgraph cluster16{
		label="Set 16 RecordType(CHAR(50) I_CATEGORY, DECIMAL(7, 2) I_CURRENT_PRICE)";
		rel306 [label="rel#306:LogicalProject\ninput=RelSubset#289,exprs=[$12, $5]\nrows=18000.0, cost={inf}",shape=box]
		rel383 [label="rel#383:EnumerableProject\ninput=RelSubset#356,exprs=[$12, $5]\nrows=18000.0, cost={36000.0 rows, 54001.0 cpu, 0.0 io}",color=blue,shape=box]
		subset307 [label="rel#307:RelSubset#16.NONE.[]"]
		subset384 [label="rel#384:RelSubset#16.ENUMERABLE.[]"]
	}
	subgraph cluster17{
		label="Set 17 RecordType(CHAR(50) I_CATEGORY, DECIMAL(7, 2) EXPR$0)";
		rel308 [label="rel#308:LogicalAggregate\ninput=RelSubset#307,group={0},EXPR$0=AVG($1)\nrows=1800.0, cost={inf}",shape=box]
		subset309 [label="rel#309:RelSubset#17.NONE.[]"]
		subset386 [label="rel#386:RelSubset#17.ENUMERABLE.[]",color=red]
		subset391 [label="rel#391:RelSubset#17.ENUMERABLE.[0]",color=red]
		subset386 -> subset391;	}
	subgraph cluster18{
		label="Set 18 RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR, BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME, INTEGER $f0, CHAR(50) I_CATEGORY0, DECIMAL(7, 2) EXPR$0)";
		rel310 [label="rel#310:LogicalJoin\nleft=RelSubset#305,right=RelSubset#309,condition=AND(=($94, $105), >($87, *(1.2:DECIMAL(2, 1), $106))),joinType=inner\nrows=3.190781363581952E24, cost={inf}",shape=box]
		rel387 [label="rel#387:EnumerableHashJoin\nleft=RelSubset#382,right=RelSubset#386,condition=AND(=($94, $105), >($87, *(1.2:DECIMAL(2, 1), $106))),joinType=inner\nrows=1.9413339682690627E23, cost={inf}",shape=box]
		rel392 [label="rel#392:EnumerableMergeJoin.ENUMERABLE.[[94], [105]]\nleft=RelSubset#389,right=RelSubset#391,condition=AND(=($94, $105), >($87, *(1.2:DECIMAL(2, 1), $106))),joinType=inner\nrows=3.190781363581952E24, cost={inf}",shape=box]
		subset311 [label="rel#311:RelSubset#18.NONE.[]"]
		subset388 [label="rel#388:RelSubset#18.ENUMERABLE.[]"]
	}
	subgraph cluster19{
		label="Set 19 RecordType(BIGINT CA_ADDRESS_SK, CHAR(16) CA_ADDRESS_ID, CHAR(10) CA_STREET_NUMBER, VARCHAR(60) CA_STREET_NAME, CHAR(15) CA_STREET_TYPE, CHAR(10) CA_SUITE_NUMBER, VARCHAR(60) CA_CITY, VARCHAR(30) CA_COUNTY, CHAR(2) CA_STATE, CHAR(10) CA_ZIP, VARCHAR(20) CA_COUNTRY, DECIMAL(5, 2) CA_GMT_OFFSET, CHAR(20) CA_LOCATION_TYPE, BIGINT C_CUSTOMER_SK, CHAR(16) C_CUSTOMER_ID, BIGINT C_CURRENT_CDEMO_SK, BIGINT C_CURRENT_HDEMO_SK, BIGINT C_CURRENT_ADDR_SK, BIGINT C_FIRST_SHIPTO_DATE_SK, BIGINT C_FIRST_SALES_DATE_SK, CHAR(10) C_SALUTATION, CHAR(20) C_FIRST_NAME, CHAR(30) C_LAST_NAME, CHAR(1) C_PREFERRED_CUST_FLAG, INTEGER C_BIRTH_DAY, INTEGER C_BIRTH_MONTH, INTEGER C_BIRTH_YEAR, VARCHAR(20) C_BIRTH_COUNTRY, CHAR(13) C_LOGIN, CHAR(50) C_EMAIL_ADDRESS, BIGINT C_LAST_REVIEW_DATE_SK, BIGINT SS_SOLD_DATE_SK, BIGINT SS_SOLD_TIME_SK, BIGINT SS_ITEM_SK, BIGINT SS_CUSTOMER_SK, BIGINT SS_CDEMO_SK, BIGINT SS_HDEMO_SK, BIGINT SS_ADDR_SK, BIGINT SS_STORE_SK, BIGINT SS_PROMO_SK, BIGINT SS_TICKET_NUMBER, INTEGER SS_QUANTITY, DECIMAL(7, 2) SS_WHOLESALE_COST, DECIMAL(7, 2) SS_LIST_PRICE, DECIMAL(7, 2) SS_SALES_PRICE, DECIMAL(7, 2) SS_EXT_DISCOUNT_AMT, DECIMAL(7, 2) SS_EXT_SALES_PRICE, DECIMAL(7, 2) SS_EXT_WHOLESALE_COST, DECIMAL(7, 2) SS_EXT_LIST_PRICE, DECIMAL(7, 2) SS_EXT_TAX, DECIMAL(7, 2) SS_COUPON_AMT, DECIMAL(7, 2) SS_NET_PAID, DECIMAL(7, 2) SS_NET_PAID_INC_TAX, DECIMAL(7, 2) SS_NET_PROFIT, BIGINT D_DATE_SK, CHAR(16) D_DATE_ID, DATE D_DATE, INTEGER D_MONTH_SEQ, INTEGER D_WEEK_SEQ, INTEGER D_QUARTER_SEQ, INTEGER D_YEAR, INTEGER D_DOW, INTEGER D_MOY, INTEGER D_DOM, INTEGER D_QOY, INTEGER D_FY_YEAR, INTEGER D_FY_QUARTER_SEQ, INTEGER D_FY_WEEK_SEQ, CHAR(9) D_DAY_NAME, CHAR(6) D_QUARTER_NAME, CHAR(1) D_HOLIDAY, CHAR(1) D_WEEKEND, CHAR(1) D_FOLLOWING_HOLIDAY, INTEGER D_FIRST_DOM, INTEGER D_LAST_DOM, INTEGER D_SAME_DAY_LY, INTEGER D_SAME_DAY_LQ, CHAR(1) D_CURRENT_DAY, CHAR(1) D_CURRENT_WEEK, CHAR(1) D_CURRENT_MONTH, CHAR(1) D_CURRENT_QUARTER, CHAR(1) D_CURRENT_YEAR, BIGINT I_ITEM_SK, CHAR(16) I_ITEM_ID, DATE I_REC_START_DATE, DATE I_REC_END_DATE, VARCHAR(200) I_ITEM_DESC, DECIMAL(7, 2) I_CURRENT_PRICE, DECIMAL(7, 2) I_WHOLESALE_COST, INTEGER I_BRAND_ID, CHAR(50) I_BRAND, INTEGER I_CLASS_ID, CHAR(50) I_CLASS, INTEGER I_CATEGORY_ID, CHAR(50) I_CATEGORY, INTEGER I_MANUFACT_ID, CHAR(50) I_MANUFACT, CHAR(20) I_SIZE, CHAR(20) I_FORMULATION, CHAR(20) I_COLOR, CHAR(10) I_UNITS, CHAR(10) I_CONTAINER, INTEGER I_MANAGER_ID, CHAR(50) I_PRODUCT_NAME, INTEGER $f0, CHAR(50) I_CATEGORY0, DECIMAL(7, 2) EXPR$0)";
		rel312 [label="rel#312:LogicalProject\ninput=RelSubset#311,inputs=0..104,exprs=[CAST($105):CHAR(50), CAST($106):DECIMAL(7, 2)]\nrows=3.190781363581952E24, cost={inf}",shape=box]
		rel393 [label="rel#393:EnumerableProject\ninput=RelSubset#388,inputs=0..104,exprs=[CAST($105):CHAR(50), CAST($106):DECIMAL(7, 2)]\nrows=3.190781363581952E24, cost={inf}",shape=box]
		subset313 [label="rel#313:RelSubset#19.NONE.[]"]
		subset394 [label="rel#394:RelSubset#19.ENUMERABLE.[]"]
	}
	subgraph cluster20{
		label="Set 20 RecordType(CHAR(2) CA_STATE)";
		rel314 [label="rel#314:LogicalProject\ninput=RelSubset#313,exprs=[$8]\nrows=3.190781363581952E24, cost={inf}",shape=box]
		rel395 [label="rel#395:EnumerableProject\ninput=RelSubset#394,exprs=[$8]\nrows=3.190781363581952E24, cost={inf}",shape=box]
		subset315 [label="rel#315:RelSubset#20.NONE.[]"]
		subset396 [label="rel#396:RelSubset#20.ENUMERABLE.[]"]
	}
	subgraph cluster21{
		label="Set 21 RecordType(CHAR(2) CA_STATE, BIGINT CNT)";
		rel316 [label="rel#316:LogicalAggregate\ninput=RelSubset#315,group={0},CNT=COUNT()\nrows=3.1907813635819525E23, cost={inf}",shape=box]
		rel397 [label="rel#397:EnumerableAggregate\ninput=RelSubset#396,group={0},CNT=COUNT()\nrows=3.1907813635819525E23, cost={inf}",shape=box]
		subset317 [label="rel#317:RelSubset#21.NONE.[]"]
		subset398 [label="rel#398:RelSubset#21.ENUMERABLE.[]"]
	}
	subgraph cluster22{
		label="Set 22 RecordType(CHAR(2) CA_STATE, BIGINT CNT)";
		rel318 [label="rel#318:LogicalFilter\ninput=RelSubset#317,condition=>=($1, 10)\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		rel399 [label="rel#399:EnumerableFilter\ninput=RelSubset#398,condition=>=($1, 10)\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		rel406 [label="rel#406:LogicalSort\ninput=RelSubset#319,sort0=$1,sort1=$0,dir0=ASC,dir1=ASC\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		rel413 [label="rel#413:AbstractConverter\ninput=RelSubset#400,convention=ENUMERABLE,sort=[1, 0]\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		rel411 [label="rel#411:EnumerableSort\ninput=RelSubset#400,sort0=$1,sort1=$0,dir0=ASC,dir1=ASC\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		subset319 [label="rel#319:RelSubset#22.NONE.[]"]
		subset400 [label="rel#400:RelSubset#22.ENUMERABLE.[]"]
		subset408 [label="rel#408:RelSubset#22.NONE.[1, 0]"]
		subset412 [label="rel#412:RelSubset#22.ENUMERABLE.[1, 0]"]
		subset319 -> subset408;		subset400 -> subset412;	}
	subgraph cluster23{
		label="Set 23 RecordType(BIGINT CNT, CHAR(2) CA_STATE)";
		rel320 [label="rel#320:LogicalProject\ninput=RelSubset#319,exprs=[$1, $0]\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		rel401 [label="rel#401:EnumerableProject\ninput=RelSubset#400,exprs=[$1, $0]\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		rel405 [label="rel#405:AbstractConverter\ninput=RelSubset#402,convention=ENUMERABLE,sort=[0, 1]\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		rel322 [label="rel#322:LogicalSort\ninput=RelSubset#321,sort0=$0,sort1=$1,dir0=ASC,dir1=ASC\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		rel325 [label="rel#325:AbstractConverter\ninput=RelSubset#403,convention=ENUMERABLE,sort=[0, 1]\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		rel409 [label="rel#409:LogicalProject\ninput=RelSubset#408,exprs=[$1, $0]\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		rel410 [label="rel#410:EnumerableSort\ninput=RelSubset#402,sort0=$0,sort1=$1,dir0=ASC,dir1=ASC\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		rel414 [label="rel#414:EnumerableProject\ninput=RelSubset#412,exprs=[$1, $0]\nrows=1.5953906817909763E23, cost={inf}",shape=box]
		subset321 [label="rel#321:RelSubset#23.NONE.[]"]
		subset402 [label="rel#402:RelSubset#23.ENUMERABLE.[]"]
		subset403 [label="rel#403:RelSubset#23.NONE.[0, 1]"]
		subset404 [label="rel#404:RelSubset#23.ENUMERABLE.[0, 1]"]
		subset402 -> subset404;		subset321 -> subset403;	}
	root -> subset404;
	subset279 -> rel38;
	subset327 -> rel326[color=blue];
	subset332 -> rel333; rel333 -> subset327;
	subset280 -> rel39;
	subset329 -> rel328[color=blue];
	subset334 -> rel335; rel335 -> subset329;
	subset282 -> rel281; rel281 -> subset279[label="0"]; rel281 -> subset280[label="1"];
	subset331 -> rel330[color=blue]; rel330 -> subset327[color=blue,label="0"]; rel330 -> subset329[color=blue,label="1"];
	subset331 -> rel336; rel336 -> subset332[label="0"]; rel336 -> subset334[label="1"];
	subset341 -> rel342; rel342 -> subset331;
	subset283 -> rel41;
	subset338 -> rel337[color=blue];
	subset343 -> rel344; rel344 -> subset338;
	subset285 -> rel284; rel284 -> subset282[label="0"]; rel284 -> subset283[label="1"];
	subset340 -> rel339[color=blue]; rel339 -> subset331[color=blue,label="0"]; rel339 -> subset338[color=blue,label="1"];
	subset340 -> rel345; rel345 -> subset341[label="0"]; rel345 -> subset343[label="1"];
	subset350 -> rel351; rel351 -> subset340;
	subset286 -> rel43;
	subset347 -> rel346[color=blue];
	subset352 -> rel353; rel353 -> subset347;
	subset288 -> rel287; rel287 -> subset285[label="0"]; rel287 -> subset286[label="1"];
	subset349 -> rel348[color=blue]; rel348 -> subset340[color=blue,label="0"]; rel348 -> subset347[color=blue,label="1"];
	subset349 -> rel354; rel354 -> subset350[label="0"]; rel354 -> subset352[label="1"];
	subset359 -> rel360; rel360 -> subset349;
	subset289 -> rel45;
	subset356 -> rel355[color=blue];
	subset361 -> rel362; rel362 -> subset356;
	subset291 -> rel290; rel290 -> subset288[label="0"]; rel290 -> subset289[label="1"];
	subset358 -> rel357[color=blue]; rel357 -> subset349[color=blue,label="0"]; rel357 -> subset356[color=blue,label="1"];
	subset358 -> rel363; rel363 -> subset359[label="0"]; rel363 -> subset361[label="1"];
	subset376 -> rel377; rel377 -> subset358;
	subset293 -> rel292; rel292 -> subset286;
	subset365 -> rel364[color=blue]; rel364 -> subset347[color=blue];
	subset295 -> rel294; rel294 -> subset293;
	subset367 -> rel366[color=blue]; rel366 -> subset365[color=blue];
	subset297 -> rel296; rel296 -> subset295;
	subset369 -> rel368[color=blue]; rel368 -> subset367[color=blue];
	subset299 -> rel298; rel298 -> subset297;
	subset371 -> rel370[color=blue]; rel370 -> subset369[color=blue];
	subset301 -> rel300; rel300 -> subset299;
	subset373 -> rel372[color=blue]; rel372 -> subset371[color=blue];
	subset378 -> rel379; rel379 -> subset373;
	subset303 -> rel302; rel302 -> subset291[label="0"]; rel302 -> subset301[label="1"];
	subset375 -> rel374[color=blue]; rel374 -> subset358[color=blue,label="0"]; rel374 -> subset373[color=blue,label="1"];
	subset375 -> rel380; rel380 -> subset376[label="0"]; rel380 -> subset378[label="1"];
	subset305 -> rel304; rel304 -> subset303;
	subset382 -> rel381[color=blue]; rel381 -> subset375[color=blue];
	subset389 -> rel390; rel390 -> subset382;
	subset307 -> rel306; rel306 -> subset289;
	subset384 -> rel383[color=blue]; rel383 -> subset356[color=blue];
	subset309 -> rel308; rel308 -> subset307;
	subset311 -> rel310; rel310 -> subset305[label="0"]; rel310 -> subset309[label="1"];
	subset388 -> rel387; rel387 -> subset382[label="0"]; rel387 -> subset386[label="1"];
	subset388 -> rel392; rel392 -> subset389[label="0"]; rel392 -> subset391[label="1"];
	subset313 -> rel312; rel312 -> subset311;
	subset394 -> rel393; rel393 -> subset388;
	subset315 -> rel314; rel314 -> subset313;
	subset396 -> rel395; rel395 -> subset394;
	subset317 -> rel316; rel316 -> subset315;
	subset398 -> rel397; rel397 -> subset396;
	subset319 -> rel318; rel318 -> subset317;
	subset400 -> rel399; rel399 -> subset398;
	subset408 -> rel406; rel406 -> subset319;
	subset412 -> rel413; rel413 -> subset400;
	subset412 -> rel411; rel411 -> subset400;
	subset321 -> rel320; rel320 -> subset319;
	subset402 -> rel401; rel401 -> subset400;
	subset404 -> rel405; rel405 -> subset402;
	subset403 -> rel322; rel322 -> subset321;
	subset404 -> rel325; rel325 -> subset403;
	subset403 -> rel409; rel409 -> subset408;
	subset404 -> rel410; rel410 -> subset402;
	subset404 -> rel414; rel414 -> subset412;
}